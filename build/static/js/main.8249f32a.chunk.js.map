{"version":3,"sources":["models/Pokemon.ts","components/common/like.tsx","services/httpService.ts","services/pokemonServices.ts","models/User.ts","services/userService.ts","components/pokemonDisplay.tsx","components/common/pagination.tsx","components/pokemonsGrid.tsx","components/sideBar.tsx","components/common/listGroup.tsx","services/pokeServices/generationService.ts","services/pokeServices/typeService.ts","components/common/searchBox.tsx","components/pokedex.tsx","utils/paginate.ts","services/authService.ts","components/navbar.tsx","components/notFound.tsx","components/protectedRoute.tsx","components/loginComponent/login.tsx","components/registerComponent/register.tsx","components/favoriteslist.tsx","components/teamCard.tsx","components/team.tsx","services/pokeServices/pokemonService.ts","components/game.tsx","components/logout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PokemonType","useStyles","makeStyles","regular","color","liked","Like","onClick","classes","icon","className","size","style","margin","cursor","aria-hidden","Pokemon","id","name","weight","picture","type","axios","defaults","baseURL","process","REACT_APP_API_URL","interceptors","response","use","data","error","status","console","log","toast","Promise","reject","dbApi","create","pokeApi","getOnePokemon","pokeId","a","get","res","pokemon","sprites","front_default","types","Error","getTeamById","teamId","getfavList","userId","favlist","addFav","favUserId","favPokeId","favarate","post","createTeam","team","teamUserId","teamName","addPokeToTeam","teamListTeamId","teamPokeId","e","deletePokeFromTeam","delete","User","userName","userPassword","userFirstName","userLastName","userFavorites","userTeams","getUserById","user","userFirstname","userLastname","teams","flying","backgroundColor","fire","normal","fighting","water","grass","poison","electric","ground","psychic","rock","ice","bug","dragon","ghost","dark","steel","fairy","theme","root","minWidth","maxWidth","height","cardContent","faIcon","spacing","alignItems","PokemonDisplay","props","JSON","parse","localStorage","getItem","userid","useState","setLiked","React","anchorEl","setAnchorEl","createNewTeam","setCreateNewTeam","changeFavoritesList","teamList","setTeamList","setTeamName","refresh","setRefresh","setTeam","handleTeamId","target","value","useEffect","isfavorite","getFavList","userTeamInfo","getTeams","addPokemon","submitTeam","preventDefault","Card","CardMedia","image","title","CardContent","Typography","marginLeft","variant","component","Chip","marginRight","label","display","IconButton","aria-controls","aria-haspopup","event","currentTarget","padding","outline","Menu","keepMounted","open","Boolean","onClose","map","MenuItem","disableRipple","teamid","checked","toString","onChange","Button","Divider","TextField","required","placeholder","width","trigger","deletFav","Pagination","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","_","range","secondPagesArr","slice","length","count","unshift","paddingTop","paddingRight","page","paddingLeft","PokemonsGrid","pokemons","currPage","setCurrPage","pokemonDisplays","Grid","xs","item","container","createStyles","menuButton","hide","drawer","flexShrink","whiteSpace","toolbar","zIndex","justifyContent","mixins","content","flexGrow","drawerPaper","MiniDrawer","renderSwitch","index","CssBaseline","Drawer","paper","Toolbar","List","el","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","isHorizontal","apiEndpoint","getGenerations","results","i","_id","getTypes","params","limit","offset","SearchBox","Pokedex","filters","setFilters","setGenerations","setTypes","setCurrentPage","searchQuery","setSearchQuery","selectedCategory","selectedFilter","setSelectedFilter","generations","initializeData","filtered","filter","p","toLowerCase","startsWith","currPagePokemons","pageNumber","startIndex","take","paginate","totalCount","getPageData","marginTop","query","login","setItem","stringify","logout","removeItem","getCurrentUser","ex","appBar","Navbar","authService","AppBar","position","edge","aria-label","NotFound","src","alt","ProtectedRoute","path","Component","render","rest","auth","pathname","state","from","location","flexDirection","alignItem","avatar","palette","secondary","main","form","submit","Login","changeUsername","changePassword","history","useHistory","submitLogin","push","Container","Avatar","onSubmit","fullWidth","autoComplete","autoFocus","href","Register","changeFirstName","changeLastName","submitRegister","FavoritesList","favotiteList","changeFavoriteList","newData","setNewData","chageState","displayPokemon","fpokemon","favorite","fontSize","custom","TeamCard","currentTeamList","changeCurrentTeamList","pokeValue","useContext","PokemonContext","getTeamList","deleteTeamDisplay","deletePokeFromTeamList","displayTeamList","ListItemAvatar","ListItemSecondaryAction","gutterBottom","CardActions","triger","Team","currentTeam","changeCurrentTeam","setOpen","handleClose","teamNames","userR","myArr","getTeam","changeState","displayTeam","fteam","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","pokemonUrl","identifier","getPokemons","options","ele","getPokemon","all","Game","pokedex","setPokeDex","Grass","Poison","rendomPokemon","setRendomPokemon","sendRequest","setSendRequest","min","max","floor","random","getPoke","pokeDexDisplay","alignContent","RendomDisplayPokemon","direction","justify","prevState","poke","Logout","library","add","fas","faPlus","faHeart","createContext","undefined","UserContext","App","setPokemons","Provider","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"2JAQYA,E,4QCJNC,EAAYC,YAAW,CAC3BC,QAAS,CACPC,MAAO,SAETC,MAAO,CACLD,MAAO,SAsBIE,EAlB4B,SAAC,GAAwB,IAAtBD,EAAqB,EAArBA,MAAOE,EAAc,EAAdA,QAC7CC,EAAUP,IAEhB,OACE,cAAC,IAAD,CACEQ,KAAK,QACLC,UAAWL,EAAQG,EAAQH,MAAQG,EAAQL,QAC3CQ,KAAM,KACNC,MAAO,CACLC,OAAQ,MACRC,OAAQ,WAEVP,QAASA,EACTQ,cAAY,U,QD1BLC,EAAb,sCACEC,QADF,OAEEC,UAFF,OAGEC,YAHF,OAIEC,aAJF,OAKEC,UALF,I,SAQYrB,K,gBAAAA,E,YAAAA,E,gBAAAA,E,oBAAAA,E,cAAAA,E,cAAAA,E,gBAAAA,E,oBAAAA,E,gBAAAA,E,kBAAAA,E,YAAAA,E,UAAAA,E,UAAAA,E,gBAAAA,E,cAAAA,E,YAAAA,E,cAAAA,E,eAAAA,M,kCELZsB,IAAMC,SAASC,QAAUC,mIAAYC,kBAErCJ,IAAMK,aAAaC,SAASC,KAC1B,qBAAGC,QACH,SAACC,GAWC,OATEA,EAAMH,UACNG,EAAMH,SAASI,QAAU,KACzBD,EAAMH,SAASI,OAAS,MAGxBC,QAAQC,IAAIH,GACZI,IAAMJ,MAAM,mCAGPK,QAAQC,OAAON,MAInB,IAAMO,EAAQhB,IAAMiB,OAAO,CAAEf,QAAS,oEAChCgB,EAAUlB,IAAMiB,OAAO,CAClCf,QAAS,8BCPJ,IAAMiB,EAAa,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAETH,EAAQI,IAAR,mBAAwBF,IAFf,cAErBG,EAFqB,QAIrBC,EAAU,IAAI9B,GACVC,GAAK4B,EAAIf,KAAKb,GACtB6B,EAAQ5B,KAAO2B,EAAIf,KAAKZ,KACxB4B,EAAQ1B,QAAUyB,EAAIf,KAAKiB,QAAQC,cACnCF,EAAQ3B,OAAS0B,EAAIf,KAAKX,OAC1B2B,EAAQzB,KAAO,CACbwB,EAAIf,KAAKmB,MAAM,GAAG5B,KAAKH,KACvB2B,EAAIf,KAAKmB,MAAM,IAAMJ,EAAIf,KAAKmB,MAAM,GAAG5B,KAAKH,MAXrB,kBAalB4B,GAbkB,wCAenB,IAAII,MAfe,0DAAH,sDAmBbC,EAAW,uCAAG,WAAOC,GAAP,eAAAT,EAAA,+EAEPL,EAAMM,IAAN,gBAAmBQ,IAFZ,cAEnBP,EAFmB,yBAIhBA,EAAIf,MAJY,sCAMjB,IAAIoB,MANa,yDAAH,sDAejB,IAAMG,EAAU,uCAAG,WAAOC,GAAP,eAAAX,EAAA,+EAENL,EAAMM,IAAN,gBAAmBU,IAFb,cAElBT,EAFkB,yBAIfA,EAAIf,KAAKyB,SAJM,wFAAH,sDASVC,EAAM,uCAAG,WACpBC,EACAC,GAFoB,iBAAAf,EAAA,6DAIhBgB,EAAW,CACbF,YACAC,aANkB,kBAUFpB,EAAMsB,KAAK,YAAaD,GAVtB,cAUdd,EAVc,yBAaXA,EAAIf,MAbO,yFAAH,wDAqBZ,SAAS+B,EAAWC,GACzB,OAAOxB,EAAMsB,KAAN,QAAoB,CACzBG,WAAYD,EAAKR,OACjBU,SAAUF,EAAKE,WAQZ,SAASC,EAAcb,EAAaV,GACzC,IACEJ,EAAMsB,KAAN,gBAA4B,CAC1BM,eAAgBd,EAChBe,WAAYzB,IAEdT,QAAQC,IAAI,qBACZ,MAAOkC,GACPnC,QAAQC,IAAIkC,IAIT,SAASC,EAAmBpD,GACjC,IACEqB,EAAMgC,OAAN,0BAAgCrD,IAChCgB,QAAQC,IAAI,mBACZ,MAAOkC,GACPnC,QAAQC,IAAIkC,IC7GT,IAAMG,EAAb,sCACEjB,YADF,OAEEkB,cAFF,OAGEC,kBAHF,OAIEC,mBAJF,OAKEC,kBALF,OAMEC,mBANF,OAOEC,eAPF,GCmBO,IAAMC,EAAW,uCAAG,WAAO7D,GAAP,iBAAA0B,EAAA,+EAEPL,EAAMM,IAAN,gBAAmB3B,IAFZ,cAEnB4B,EAFmB,QAGnBkC,EAAO,IAAIR,GACVjB,OAAST,EAAIf,KAAKwB,OACvByB,EAAKP,SAAW3B,EAAIf,KAAK0C,SACzBO,EAAKN,aAAe5B,EAAIf,KAAK2C,aAC7BM,EAAKL,cAAgB7B,EAAIf,KAAKkD,cAC9BD,EAAKJ,aAAe9B,EAAIf,KAAKmD,aAC7BF,EAAKH,cAAgB/B,EAAIf,KAAKyB,QAC9BwB,EAAKF,UAAYhC,EAAIf,KAAKoD,MAVH,kBAWhBH,GAXgB,wCAajB,IAAI7B,MAba,0DAAH,sDCelBD,EAAQ,CACZkC,OAAQ,CACNC,gBAAiB,WAEnBC,KAAM,CACJD,gBAAiB,WAEnBE,OAAQ,CACNF,gBAAiB,WAEnBG,SAAU,CACRH,gBAAiB,WAEnBI,MAAO,CACLJ,gBAAiB,WAEnBK,MAAO,CACLL,gBAAiB,WAEnBM,OAAQ,CACNN,gBAAiB,WAEnBO,SAAU,CACRP,gBAAiB,WAEnBQ,OAAQ,CACNR,gBAAiB,WAEnBS,QAAS,CACPT,gBAAiB,WAEnBU,KAAM,CACJV,gBAAiB,WAEnBW,IAAK,CACHX,gBAAiB,WAEnBY,IAAK,CACHZ,gBAAiB,WAEnBa,OAAQ,CACNb,gBAAiB,WAEnBc,MAAO,CACLd,gBAAiB,WAEnBe,KAAM,CACJf,gBAAiB,WAEnBgB,MAAO,CACLhB,gBAAiB,WAEnBiB,MAAO,CACLjB,gBAAiB,YAIfnF,EAAYC,aAAW,SAACoG,GAAD,oBAC3BC,KAAM,CACJC,SAAU,IACVC,SAAU,KAEZrF,QAAS,CACPsF,OAAQ,KAEVC,YAAa,CACXvB,gBAAiB,WAEnBwB,OAAQ,CACNxG,MAAO,SAETS,OAAQ,CACNA,OAAQyF,EAAMO,QAAQ,IAExBpG,KAAM,CACJqG,WAAY,SAEX7D,MAUQ8D,EAAgE,SAC3EC,GAEA,IAAIjC,EAAOkC,KAAKC,MAAMC,aAAaC,QAAQ,YACrCC,EAAStC,EAAOA,EAAKzB,OAAS,KAFjC,EAIuBgE,oBAAkB,GAJzC,mBAIIjH,EAJJ,KAIWkH,EAJX,OAK6BC,IAAMF,SAA6B,MALhE,mBAKIG,EALJ,KAKcC,EALd,OAMuCF,IAAMF,UAAkB,GAN/D,mBAMIK,EANJ,KAMmBC,EANnB,OAO0CN,mBAAsB,IAPhE,mBAOmBO,GAPnB,WAQGrH,EAAUP,IARb,EAS6BqH,mBAAkB,IAT/C,mBASIQ,EATJ,KAScC,EATd,OAU6BT,mBAAS,IAVtC,mBAUItD,EAVJ,KAUcgE,EAVd,OAW2BV,oBAAS,GAXpC,oBAWIW,GAXJ,MAWaC,GAXb,SAYuBZ,mBAAS,IAZhC,qBAYIlE,GAZJ,MAYY+E,GAZZ,SAa2Bb,oBAAkB,GAb7C,qBAcGc,IAdH,YAckB,SAAChE,GACpB+D,GAAQ/D,EAAEiE,OAAOC,SAUnBC,qBAAU,YACJvB,EAAMwB,YACRjB,GAAUlH,GAGC,OAAXgH,KACY,uCAAG,sBAAA1E,EAAA,kEACfkF,EADe,SACWxE,EAAWgE,GADtB,6EAAH,oDAGdoB,GAEY,uCAAG,4BAAA9F,EAAA,sEACYmC,EAAYuC,GADxB,OACTqB,EADS,OAEbX,EAAYW,EAAa7D,WAFZ,2CAAH,oDAKZ8D,IAGAT,IAAW,KACV,CAACD,KAEJ,IAAMW,GAAU,uCAAG,sBAAAjG,EAAA,sDACjB,IACEsB,EAAcb,GAAQ4D,EAAMlE,QAAQ7B,IACpC,MAAOmD,GACPnC,QAAQC,IAAIkC,GAJG,2CAAH,qDAQVyE,GAAU,uCAAG,WAAOzE,GAAP,SAAAzB,EAAA,sDACjByB,EAAE0E,iBACF,IAKEjF,EAJW,CACTP,OAAQ+D,EACRrD,SAAUA,IAGZ,MAAOI,GACPnC,QAAQC,IAAIkC,GATG,2CAAH,sDA6ChB,OACE,eAAC2E,EAAA,EAAD,CAAMrI,UAAWF,EAAQ+F,KAAO,IAAM/F,EAAQ4F,MAA9C,UACE,cAAC4C,EAAA,EAAD,CACEtI,UAAWF,EAAQY,QACnBR,MAAO,CAAEwE,gBAAiB,SAC1B6D,MAAOjC,EAAMlE,QAAQ1B,QACrB8H,MAAK,qBAAgBlC,EAAMlE,QAAQ5B,QAErC,eAACiI,EAAA,EAAD,CAAazI,UAAWF,EAAQmG,YAAhC,UACE,qBAAKjG,UAAU,MAAf,SACE,cAAC0I,EAAA,EAAD,CACExI,MAAO,CAAER,MAAO,QAASiJ,WAAY,IACrCC,QAAQ,KACRC,UAAU,KAHZ,SAKGvC,EAAMlE,QAAQ5B,SAGnB,sBAAKR,UAAU,MAAf,UACE,cAAC8I,EAAA,EAAD,CACE9I,UAAWF,EAAQwG,EAAMlE,QAAQzB,KAAK,IACtCT,MAAO,CAAEyI,WAAY,GAAII,YAAa,GACtCC,MAAO1C,EAAMlE,QAAQzB,KAAK,KAE3B2F,EAAMlE,QAAQzB,KAAK,IAClB,cAACmI,EAAA,EAAD,CACE9I,UAAWF,EAAQwG,EAAMlE,QAAQzB,KAAK,IACtCqI,MAAO1C,EAAMlE,QAAQzB,KAAK,KAG9B,sBACEX,UAAU,UACVE,MAAO,CACL+I,QAAS,OACT7C,WAAY,SACZ2C,YAAa,IALjB,UAQE,cAACG,EAAA,EAAD,CACEC,gBAAc,cACdC,gBAAc,OACdvJ,QAzEY,SAACwJ,GACvBrC,EAAYqC,EAAMC,eAClBpC,GAAiB,IAwEPhH,MAAO,CAAEqJ,QAAS,GAJpB,SAME,cAAC,IAAD,CACExJ,KAAK,OACLC,UAAWF,EAAQoG,OACnBhG,MAAO,CACLC,OAAQ,MACRC,OAAQ,UACRoJ,QAAS,YAIf,eAACC,EAAA,EAAD,CACElJ,GAAG,cACHwG,SAAUA,EACV2C,aAAW,EACXC,KAAMC,QAAQ7C,GACd8C,QAtFY,WACtB7C,EAAY,OAgFJ,UAOGI,EAAS0C,KAAI,SAAC1G,GAAD,OACZ,eAAC2G,EAAA,EAAD,CAAUC,eAAa,EAAvB,UACE,uBACEtK,MAAM,UACNiB,KAAK,QACLH,KAAK,QACLoH,MAAOxE,EAAK6G,OAEZC,QAASxH,KAAWU,EAAK6G,OAAOE,WAChCC,SAAU1C,IAFLtE,EAAK6G,QAIX7G,EAAKE,WAVqBF,EAAK6G,WAapC,cAACI,EAAA,EAAD,CAAQxK,QAASqI,GAAjB,yBACA,cAACoC,EAAA,EAAD,IACCrD,EACC,oCACE,cAAC8C,EAAA,EAAD,CAAUC,eAAa,EAAvB,SACE,cAACO,EAAA,EAAD,CACEC,UAAQ,EACRjK,GAAG,oBACHyI,MAAM,OACNyB,YAAY,qBACZ7C,MAAOtE,EACP8G,SAzKS,SAAC1G,GAC5B4D,EAAY5D,EAAEiE,OAAOC,QAyKH1H,MAAO,CAAEyI,WAAY,GAAII,YAAa,QAG1C,cAACgB,EAAA,EAAD,CAAUC,eAAa,EAACnK,QAAS,kBAAM2H,IAAW,IAAlD,SACE,cAAC6C,EAAA,EAAD,CACExK,QAASsI,GACTS,QAAQ,WACRlJ,MAAM,UACNM,UAAW,UAJb,yBAWJ,eAAC+J,EAAA,EAAD,CAAUlK,QAAS,kBAAMqH,GAAiB,IAA1C,UACE,cAAC,IAAD,CAAiBnH,KAAK,OAAOG,MAAO,CAAEwK,MAAO,MAD/C,iBAMJ,qBAAK7K,QAASyG,EAAMqE,QAApB,SACE,cAAC,EAAD,CAAMhL,MAAOA,EAAOE,QApIR,WACtB,GAAKwE,EAOL,GAHAwC,GAAUlH,GAEV4B,QAAQC,IAAI7B,GACPA,GAKE,GAAIA,EAAO,CAChB4B,QAAQC,IAAI,iBAEA,uCAAG,sBAAAS,EAAA,sDH1KkBc,EG2KR4D,EH3K2B3D,EG2KnBsD,EAAMlE,QAAQ7B,GH1KnDqB,EAAMsB,KAAN,sBAAkC,CAAEH,YAAWC,cAC/CzB,QAAQC,IAAI,WGwKO,iCH1Kd,IAAgCuB,EAAmBC,IG0KrC,OAAH,oDAGZ4H,SAVc,uCAAG,sBAAA3I,EAAA,sEACTa,EAAO6D,EAAQL,EAAMlE,QAAQ7B,IADpB,2CAAH,qDAGdwH,qB,oBClHS8C,GAzF0C,SAAC,GAKnD,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAaC,GACzC,GAAkB,IAAdG,EAAiB,OAAO,KAE5B,IAAMG,EAAkBC,KAAEC,MAAM,EAAGL,EAAY,GAE3CM,EAA2BH,EAAMI,MAAMT,EAAY,EAAEA,EAAY,GAMrE,GAJIA,IAAgBK,EAAMA,EAAMK,OAAO,KACrCF,EAAiBH,EAAMI,MAAMT,EAAY,EAAGA,IAG1CQ,EAAeE,OAAO,EAAE,CAAC,IAAD,EACtBC,EAAe,EAAEH,EAAeE,QACpC,EAAAF,GAAeI,QAAf,oBAA0BP,EAAMI,MAAOT,EAAY,EAAKW,EAAOX,EAAY,KAG7E,OACE,8BACE,qBAAIhL,UAAU,aAAaE,MAAO,CAAC2L,WAAW,OAA9C,UAECb,EAAcK,EAAM,GACf,oBAAInL,MAAO,CAAC4L,aAAa,OAAzB,SACA,mBAAG9L,UAAU,YAAYH,QAAS,kBAAMoL,EAAaD,EAAY,IAAjE,wBAIA,GAELA,EAAcK,EAAM,GACnB,6BACE,mBAAGrL,UAAU,YAAYH,QAAS,kBAAMoL,EAAa,IAArD,iBAIA,GAEHD,EAAcK,EAAM,GACf,6BACA,mBAAGrL,UAAU,YAAb,mBAIA,GAEHwL,EAAe1B,KAAI,SAACiC,GAAD,OAClB,oBAEE/L,UAAW+L,IAASf,EAAc,mBAAqB,YAFzD,SAIE,mBAAGhL,UAAU,YAAYH,QAAS,kBAAMoL,EAAac,IAArD,SACGA,KAJEA,MAQRf,EAAcK,EAAMA,EAAMK,OAAO,GAC9B,6BACA,mBAAG1L,UAAU,YAAb,mBAIA,GAEHgL,EAAcK,EAAMA,EAAMK,OAAO,GAChC,6BACA,mBAAG1L,UAAU,YAAYH,QAAS,kBAAMoL,EAAaC,IAArD,SACGA,MAGD,GAEHF,EAAcK,EAAMA,EAAMK,OAAO,GAC9B,oBAAKxL,MAAO,CAAC8L,YAAY,OAAzB,SACA,mBAAGhM,UAAU,YAAYH,QAAS,kBAAMoL,EAAaD,EAAY,IAAjE,oBAIA,SCpDGiB,GA7BqD,SAAC,GAE9D,IADLC,EACI,EADJA,SACI,EAC4BtF,mBAAiB,GAD7C,mBACGmE,EADH,aAE4BnE,mBAAiB,IAF7C,mBAEGuF,EAFH,KAEaC,EAFb,KAIAC,EAAkBH,EAASpC,KAAI,SAAC1H,GAClC,OACE,cAACkK,EAAA,EAAD,CAAuBC,GAAI,EAAGC,MAAI,EAAlC,SACE,cAAC,EAAD,CAAgBpK,QAASA,KADhBA,EAAQ7B,OAMvB,OACE,qCACE,cAAC+L,EAAA,EAAD,CAAMG,WAAS,EAACtG,QAAS,EAAzB,SACGkG,IAEH,cAAC,GAAD,CACEvB,WAAYoB,EAASR,OACrBX,SAAUA,EACVC,YAAamB,EACblB,aAAcmB,Q,4IChBhB7M,GAAYC,aAAW,SAACoG,GAAD,OAC3B8G,aAAa,CACX7G,KAAM,CACJoD,QAAS,QAEX0D,WAAY,CACV5D,YAAa,IAEf6D,KAAM,CACJ3D,QAAS,QAEX4D,OAAQ,CACNnC,MAdc,IAedoC,WAAY,EACZC,WAAY,UAEdC,QAAQ,aACNC,QAAS,EACThE,QAAS,OACT7C,WAAY,SACZ8G,eAAgB,WAChB3D,QAAS3D,EAAMO,QAAQ,EAAG,IAEvBP,EAAMuH,OAAOH,SAElBI,QAAS,CACPC,SAAU,EACV9D,QAAS3D,EAAMO,QAAQ,IAEzBmH,YAAa,CACX5C,MAhCc,UAqCL,SAAS6C,KACtB,IAAMzN,EAAUP,KAEViO,EAAe,SAACC,GACpB,OAAQA,GACN,KAAK,EACH,OAAO,cAAC,KAAD,IACT,KAAK,EACH,OAAO,cAAC,KAAD,IACT,KAAK,EACH,OAAO,cAAC,KAAD,MAGb,OACE,sBAAKzN,UAAWF,EAAQ+F,KAAxB,UACE,cAAC6H,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,CACE3N,UAAWF,EAAQ+M,OACnBjE,QAAQ,YACR9I,QAAS,CACP8N,MAAO9N,EAAQwN,aAJnB,UAOE,cAACO,GAAA,EAAD,IACA,cAACvD,EAAA,EAAD,IAEA,cAACwD,GAAA,EAAD,UACG,CACC,CAAC,aAAc,QACf,CAAC,QAAS,UACV,CAAC,OAAQ,UACThE,KAAI,SAACiE,EAAIN,GAAL,OACJ,eAACO,GAAA,EAAD,CAAUC,QAAM,EAAapF,UAAWqF,IAAMC,GAAIJ,EAAG,GAArD,UACE,cAACK,GAAA,EAAD,UAAeZ,EAAaC,KAC5B,cAACY,GAAA,EAAD,CAAcC,QAASP,EAAG,OAFNA,EAAG,YAO/B,sBAAM/N,UAAWF,EAAQsN,QAAzB,SACE,cAACS,GAAA,EAAD,SClFR,IA2BeU,GA3B4C,SAAC,GAOrD,IANLC,EAMI,EANJA,MAMI,IALJC,oBAKI,MALW,OAKX,MAJJC,qBAII,MAJY,MAIZ,EAHJC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aAEI,IADJC,oBACI,SACJ,OACE,oBACE7O,UAAW,cAAgB6O,EAAe,yBAA2B,IADvE,SAGGL,EAAM1E,KAAI,SAAC0C,GAAD,OACT,oBACE3M,QAAS,kBAAM+O,EAAapC,IAE5BxM,UACEwM,IAASmC,EAAe,yBAA2B,kBAJvD,SAOGnC,EAAKiC,IALDjC,EAAKkC,UCvBdI,GAAc,cAMb,SAAeC,KAAtB,gC,8CAAO,kCAAA9M,EAAA,sEACkBH,EAAQI,IAAI4M,IAD9B,OAIL,IAJK,SACG1N,EADH,EACGA,KAEJ4N,EAAiB5N,EAAK4N,QACjBC,EAAI,EAAGA,GAAKD,EAAQtD,OAAQuD,IACnCD,EAAQC,EAAI,GAAGC,IAAMD,EALlB,yBAQED,GARF,4C,sBCNP,IAAMF,GAAc,QAMb,SAAeK,KAAtB,gC,8CAAO,kCAAAlN,EAAA,sEACkBH,EAAQI,IAAI4M,GAAa,CAC9CM,OAAQ,CACNC,MAAO,GACPC,OAAQ,KAJP,OASL,IATK,SACGlO,EADH,EACGA,KAOJ4N,EAAiB5N,EAAK4N,QACjBC,EAAI,EAAGA,GAAKD,EAAQtD,OAAQuD,IACnCD,EAAQC,EAAI,GAAGC,IAAMD,EAVlB,yBAaED,GAbF,4C,sBCNP,IAaeO,GAbiC,SAAC,GAAyB,IAAvB3H,EAAsB,EAAtBA,MAAOwC,EAAe,EAAfA,SACxD,OACE,uBACEzJ,KAAK,OACLH,KAAK,QACLR,UAAU,oBACVyK,YAAY,YACZ7C,MAAOA,EACPwC,SAAU,SAAC1G,GAAD,OAAO0G,EAAS1G,EAAE4F,cAAc1B,WCOhD,IA0He4H,GA1HoC,SAAC,GAAkB,IAAhBtD,EAAe,EAAfA,SAAe,EAC/BtF,mBAAgB,CAClD,CAAEpG,KAAM,cACR,CAAEA,KAAM,UAHyD,gCAKrCoG,mBAAgB,KALqB,mBAK5D6I,EAL4D,KAKnDC,EALmD,OAM7B9I,mBAAgB,IANa,mBAM/C+I,GAN+C,aAOzC/I,mBAAgB,IAPyB,mBAOrDgJ,GAPqD,aAS7BhJ,mBAAiB,GATY,mBAS5DoE,EAT4D,KAS/C6E,EAT+C,OAUnCjJ,mBAAiB,GAVkB,mBAU5DmE,EAV4D,aAW7BnE,mBAAiB,KAXY,mBAW5DkJ,EAX4D,KAW/CC,EAX+C,OAanBnJ,mBAAc,CAC5DpG,KAAM,SAd2D,mBAa5DwP,EAb4D,aAgBvBpJ,mBAAc,OAhBS,mBAgB5DqJ,EAhB4D,KAgB5CC,EAhB4C,OAiB3BtJ,mBAAc,MAjBa,6BAmBnEiB,qBAAU,YACY,uCAAG,gCAAA5F,EAAA,sEACJ8M,KADI,cACjB3N,EADiB,OAEf+O,EAFe,CAEA,CAAEjB,IAAK,GAAI1O,KAAM,oBAFjB,mBAEyCY,IAFzC,SAIR+N,KAJQ,OAIrB/N,EAJqB,OAKfmB,EALe,CAKN,CAAE2M,IAAK,GAAI1O,KAAM,cALX,mBAK6BY,IAElDuO,EAAeQ,GACfP,EAASrN,GAETmN,EAAWnN,GAVU,4CAAH,qDAYpB6N,KACC,IAEH,IAnCmE,EA4D/C,WAClB,IAAIC,EAAWnE,EACf,GAAI8D,GAAoBC,GAAkBA,EAAef,IACvD,OAAQc,EAAiBxP,MACvB,IAAK,aACH,MACF,IAAK,OACH6P,EAAWnE,EAASoE,QAClB,SAACC,GAAD,OACEA,EAAE5P,KAAK,IAAMsP,EAAezP,MAC5B+P,EAAE5P,KAAK,IAAMsP,EAAezP,QAMlCsP,IACFO,EAAWA,EAASC,QAAO,SAACC,GAAD,OACzBA,EAAE/P,KAAKgQ,cAAcC,WAAWX,EAAYU,mBAIhD,IAAME,ECjGH,SAAkBlC,EAAcmC,EAAoB5F,GACzD,IAAM6F,GAAcD,EAAa,GAAK5F,EACtC,OAAOO,KAAEkD,GAAO/C,MAAMmF,GAAYC,KAAK9F,GAAUnD,QD+FtBkJ,CAAST,EAAUrF,EAAaD,GAEzD,MAAO,CAAEgG,WAAYV,EAAS3E,OAAQgF,oBAECM,GAAjCD,EAtF2D,EAsF3DA,WAAYL,EAtF+C,EAsF/CA,iBAEpB,OACE,sBAAK1Q,UAAU,MAAME,MAAO,CAAEC,OAAQ,GAAtC,UACE,qBAAKH,UAAU,QAAf,SACE,cAAC,GAAD,MAEF,qBAAKA,UAAU,QAAQE,MAAO,CAAE+Q,UAAW,OAA3C,SASE,cAAC,GAAD,CACEzC,MAAOiB,EACPd,aAAcsB,EACdrB,aA1DmB,SAAC0B,GAC1BJ,EAAkBI,GAClBP,EAAe,IACfF,EAAe,QA0Db,sBAAK7P,UAAU,QAAQE,MAAO,CAAE+Q,UAAW,OAA3C,UACE,cAAC,GAAD,CAAWrJ,MAAOkI,EAAa1F,SAxDhB,SAAC8G,GACpBnB,EAAemB,GACfrB,EAAe,MAuDX,cAAC,GAAD,CAAc3D,SAAUwE,IACxB,cAAC,GAAD,CACE5F,WAAYiG,EACZhG,SAAUA,EACVC,YAAaA,EACbC,aAAc4E,W,8BElIlBf,GAAc,QAGb,SAAeqC,GAAtB,qC,8CAAO,WAAqBrN,EAAkBC,GAAvC,eAAA9B,EAAA,+EAEaL,EAAMsB,KAAK4L,GAAa,CAAEhL,WAAUC,iBAFjD,cAEC5B,EAFD,OAGHsE,aAAa2K,QAAQ,UAAW7K,KAAK8K,UAAUlP,EAAIf,OAGnDG,QAAQC,IAAIiF,aAAaC,QAAQ,YAN9B,kBAOIvE,EAAIf,MAPR,mCASHG,QAAQC,IAAR,OACI,KAAEN,SAVH,uBAWK,IAAIsB,MAAM,KAAEtB,SAASE,MAX1B,cAaK,IAAIoB,MAAM,8BAbf,0D,sBA+BQ,QACb2O,SACAG,OAfK,WACL7K,aAAa8K,WAAW,YAexBC,eAZK,WACL,IAEE,OADa/K,aAAaC,QAAQ,WAElC,MAAO+K,GACP,OAAO,QCrBLlS,GAAYC,aAAW,SAACoG,GAAD,OAC3B8G,aAAa,CACX7G,KAAM,CACJwH,SAAU,GAEZV,WAAY,CACV5D,YAAanD,EAAMO,QAAQ,IAE7BuL,OAAQ,CACNzE,OAAQrH,EAAMqH,OAAOJ,OAAS,GAEhCrE,MAAO,CACL6E,SAAU,QAoDDsE,GA/C8B,WAC3C,IAAM7R,EAAUP,KACCqS,GAAYJ,iBAI7B,OACE,qBAAKxR,UAAWF,EAAQ+F,KAAxB,SACE,cAACgM,GAAA,EAAD,CACE7R,UAAWF,EAAQ4R,OACnBI,SAAS,QACT5R,MAAO,CAAEwE,gBAAiB,UAAWgG,MAAO,SAH9C,SAKE,eAACmD,GAAA,EAAD,WACE,cAAC3E,EAAA,EAAD,CACE6I,KAAK,QACL/R,UAAWF,EAAQ6M,WACnBjN,MAAM,UACNsS,aAAW,OACXnJ,UAAWqF,IACXC,GAAG,IANL,SAQE,cAAC,KAAD,MAEF,cAACzF,EAAA,EAAD,CAAYE,QAAQ,KAAK5I,UAAWF,EAAQ0I,MAA5C,kBAIE,gCACA,cAAC6B,EAAA,EAAD,CAAQ3K,MAAM,UAAUmJ,UAAWqF,IAAMC,GAAG,SAA5C,mBAGA,cAAC9D,EAAA,EAAD,CAAQ3K,MAAM,UAAUmJ,UAAWqF,IAAMC,GAAG,YAA5C,yBAKA,cAAC9D,EAAA,EAAD,CAAQ3K,MAAM,UAAUmJ,UAAWqF,IAAMC,GAAG,UAA5C,4BCjEC8D,GAAyC,WACpD,OACE,8BACE,qBACEC,IAA8B,kBAC9BC,IAAI,iBACJjS,MAAO,CAACwK,MAAM,OAAQ1E,OAAO,a,QCsBtBoM,GAxBsC,SAAC,GAKhD,EAJJC,KAIK,IAHMC,EAGP,EAHJzJ,UACA0J,EAEI,EAFJA,OACGC,EACC,8CACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEED,OAAQ,SAACjM,GACP,OAAKmM,GAAKjB,iBAODc,EAAY,cAACA,EAAD,eAAehM,IAAYiM,EAAOjM,GALnD,cAAC,IAAD,CACE6H,GAAI,CAAEuE,SAAU,SAAUC,MAAO,CAAEC,KAAMtM,EAAMuM,kB,kDCAvDtT,GAAYC,aAAW,SAACoG,GAAD,MAAY,CACvCgI,MAAO,CACLqD,UAAWrL,EAAMO,QAAQ,GACzB8C,QAAS,OACT6J,cAAe,SACfC,UAAW,WAEbC,OAAQ,CACN7S,OAAQyF,EAAMO,QAAQ,GACtBzB,gBAAiBkB,EAAMqN,QAAQC,UAAUC,MAE3CC,KAAM,CACJ1I,MAAO,OACPuG,UAAWrL,EAAMO,QAAQ,IAE3BkN,OAAQ,CACNlT,OAAQyF,EAAMO,QAAQ,EAAG,EAAG,QAsFjBmN,GAlF6B,SAAChN,GAAW,IAAD,EAClBM,mBAAS,IADS,mBAC9C9C,EAD8C,KACpCyP,EADoC,OAEd3M,mBAAS,IAFK,mBAE9C7C,EAF8C,KAEhCyP,EAFgC,KAG/C1T,EAAUP,KACVkU,EAAUC,cASVC,EAAW,uCAAG,WAAOjQ,GAAP,SAAAzB,EAAA,6DAClByB,EAAE0E,iBADgB,kBAGV+I,GAAMrN,EAAUC,GAHN,OAIhB0P,EAAQG,KAAK,KAJG,gDAMhBJ,EAAe,IACfjS,QAAQC,IAAR,MAPgB,yDAAH,sDAUjB,OACE,eAACqS,GAAA,EAAD,CAAWhL,UAAU,OAAO9C,SAAS,KAArC,UACE,cAAC2H,GAAA,EAAD,IACA,sBAAK1N,UAAWF,EAAQ8N,MAAxB,UACE,cAACkG,GAAA,EAAD,CAAQ9T,UAAWF,EAAQkT,OAA3B,SACE,cAAC,KAAD,MAEF,cAACtK,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAnC,qBAGA,uBAAM5I,UAAWF,EAAQsT,KAAMW,SAAUJ,EAAzC,UACE,cAACpJ,EAAA,EAAD,CACE3B,QAAQ,WACRzI,OAAO,SACPqK,UAAQ,EACRwJ,WAAS,EACTzT,GAAG,QACHyI,MAAM,WACNxI,KAAK,QACLyT,aAAa,MACbC,WAAS,EACTtM,MAAO9D,EACPsG,SAvCmB,SAAC1G,GAC5B6P,EAAe7P,EAAEiE,OAAOC,UAwClB,cAAC2C,EAAA,EAAD,CACE3B,QAAQ,WACRzI,OAAO,SACPqK,UAAQ,EACRwJ,WAAS,EACTxT,KAAK,WACLwI,MAAM,WACNrI,KAAK,WACLJ,GAAG,WACH0T,aAAa,mBACbrM,MAAO7D,EACPqG,SAhDmB,SAAC1G,GAC5B8P,EAAe9P,EAAEiE,OAAOC,UAiDlB,cAACyC,EAAA,EAAD,CACE1J,KAAK,SACLqT,WAAS,EACTpL,QAAQ,YACRlJ,MAAM,UACNM,UAAWF,EAAQuT,OALrB,qBASA,cAAC/G,EAAA,EAAD,CAAMG,WAAS,EAAf,SACE,cAACH,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC0B,GAAA,EAAD,CAAMiG,KAAK,YAAYvL,QAAQ,QAA/B,SACG,iD,qBC1FXrJ,GAAYC,aAAW,SAACoG,GAAD,MAAY,CACvCgI,MAAO,CACLqD,UAAWrL,EAAMO,QAAQ,GACzB8C,QAAS,OACT6J,cAAe,SACfC,UAAW,WAEbC,OAAQ,CACN7S,OAAQyF,EAAMO,QAAQ,GACtBzB,gBAAiBkB,EAAMqN,QAAQC,UAAUC,MAE3CC,KAAM,CACJ1I,MAAO,OACPuG,UAAWrL,EAAMO,QAAQ,IAE3BkN,OAAQ,CACNlT,OAAQyF,EAAMO,QAAQ,EAAG,EAAG,QAmIjBiO,GA5H2C,SAAC9N,GACzD,IAAMxG,EAAUP,KACVkU,EAAUC,cAFmD,EAG1B9M,mBAAS,IAHiB,mBAG5D5C,EAH4D,KAG7CqQ,EAH6C,OAI5BzN,mBAAS,IAJmB,mBAI5D3C,EAJ4D,KAI9CqQ,EAJ8C,OAKhC1N,mBAAS,IALuB,mBAK5D9C,EAL4D,KAKlDyP,EALkD,OAM5B3M,mBAAS,IANmB,mBAM5D7C,EAN4D,KAM9CyP,EAN8C,KAwB7De,EAAc,uCAAG,WAAO7Q,GAAP,SAAAzB,EAAA,sDACrByB,EAAE0E,iBACF,IhB3DqB/D,EgB4DR,CACTzB,OAAQ,EACRoB,cAAeA,EACfC,aAAcA,EACdH,SAAUA,EACVC,aAAcA,GhBhEbnC,EAAMsB,KAFK,QAEa,CAE7BY,SAAUO,EAAKP,SACfC,aAAcM,EAAKN,aACnBO,cAAeD,EAAKL,cACpBO,aAAcF,EAAKJ,egB8DjBwP,EAAQG,KAAK,KACb,MAAOlQ,GACPnC,QAAQC,IAAIkC,GAbO,iChBzDlB,IAAkBW,IgByDA,OAAH,sDAgBpB,OACE,eAACwP,GAAA,EAAD,CAAWhL,UAAU,OAAO9C,SAAS,KAArC,UACE,cAAC2H,GAAA,EAAD,IACA,sBAAK1N,UAAWF,EAAQ8N,MAAxB,UACE,cAACkG,GAAA,EAAD,CAAQ9T,UAAWF,EAAQkT,OAA3B,SACE,cAAC,KAAD,MAEF,cAACtK,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAnC,sBAGA,uBAAM5I,UAAWF,EAAQsT,KAAMW,SAAUQ,EAAzC,UACE,cAAChK,EAAA,EAAD,CAEEpK,OAAO,SACPqK,UAAQ,EACRwJ,WAAS,EACTzT,GAAG,YACHyI,MAAM,aACNxI,KAAK,YACLyT,aAAa,OACbC,WAAS,EACTtM,MAAO5D,EACPoG,SAtDoB,SAAC1G,GAC7B2Q,EAAgB3Q,EAAEiE,OAAOC,UAuDnB,cAAC2C,EAAA,EAAD,CAEEpK,OAAO,SACPqK,UAAQ,EACRwJ,WAAS,EACTxT,KAAK,WACLwI,MAAM,YACNzI,GAAG,WACH0T,aAAa,UACbrM,MAAO3D,EACPmG,SA9DmB,SAAC1G,GAC5B4Q,EAAe5Q,EAAEiE,OAAOC,UA+DlB,cAAC2C,EAAA,EAAD,CAEEpK,OAAO,SACPqK,UAAQ,EACRwJ,WAAS,EACTzT,GAAG,WACHyI,MAAM,WACNxI,KAAK,WACLyT,aAAa,WACbC,WAAS,EACTtM,MAAO9D,EACPsG,SAvEmB,SAAC1G,GAC5B6P,EAAe7P,EAAEiE,OAAOC,UAwElB,cAAC2C,EAAA,EAAD,CAEEpK,OAAO,SACPqK,UAAQ,EACRwJ,WAAS,EACTzT,GAAG,WACHyI,MAAM,WACNxI,KAAK,WACLG,KAAK,WACLsT,aAAa,WACbC,WAAS,EACTtM,MAAO7D,EACPqG,SAjFmB,SAAC1G,GAC5B8P,EAAe9P,EAAEiE,OAAOC,UAkFlB,cAACyC,EAAA,EAAD,CACE1J,KAAK,SACLqT,WAAS,EACTpL,QAAQ,YACRlJ,MAAM,UACNM,UAAWF,EAAQuT,OALrB,sBASA,cAAC/G,EAAA,EAAD,CAAMG,WAAS,EAAf,SACE,cAACH,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC0B,GAAA,EAAD,CAAMiG,KAAK,SAASvL,QAAQ,QAA5B,SACG,iDC1EF4L,GA/DsD,SAAC,GAAkB,IAAhBtI,EAAe,EAAfA,SAAe,EAE1CtF,mBAAsB,IAFoB,mBAE9E6N,EAF8E,KAEhEC,EAFgE,OAGxC9N,mBAAoB,IAHoB,gCAIrDA,mBAAiB,IAJoC,mBAI9EmE,EAJ8E,aAKrDnE,mBAAiB,IALoC,mBAK9EuF,EAL8E,KAKpEC,EALoE,OAMvDxF,oBAAkB,GANqC,mBAM9E+N,EAN8E,KAMrEC,EANqE,KAQ/EjO,EADKJ,KAAKC,MAAMC,aAAaC,QAAQ,YACvB9D,OAGpBiF,qBAAU,YACM,uCAAG,sBAAA5F,EAAA,kEAEfyS,EAFe,SAEU/R,EAAWgE,GAFrB,6EAAH,qDAIdoB,GAGA6M,GAAW,KAEV,CAACD,IAGJ,IAAIE,EAAa,WAEftT,QAAQC,IAAI,YACZoT,GAAW,IAKbrT,QAAQC,MAGR,IAAIsT,EAAiB5I,EAASpC,KAAI,SAACiL,GACjC,IAAK,IAAI9F,EAAI,EAAGA,EAAIwF,EAAa/I,OAAQuD,IACvC,GAAI8F,EAASxU,KAAOkU,EAAaxF,GAAGjM,UAAW,CAE7C,OACE,cAACsJ,EAAA,EAAD,CAAwBC,GAAI,EAAGC,MAAI,EAAnC,SACE,cAAC,EAAD,CAAgBpK,QAAS2S,EAAUC,SAAUP,EAAaxF,GAAInH,YAHtD,EAGyE6C,QAASkK,KADjFE,EAASxU,QAS5B,OACE,gCACE,cAAC+L,EAAA,EAAD,CAAMG,WAAS,EAACtG,QAAS,EAAzB,SACG2O,IAEH,cAAC,GAAD,CACEhK,WAAY2J,EAAa/I,OACzBX,SAAUA,EACVC,YAAamB,EACblB,aAAcmB,Q,wEC9ChB7M,GAAYC,YAAW,CAC3BqG,KAAM,CACJoL,UAAW,GACXnL,SAAU,KAEZ0C,MAAO,CACL9I,MAAO,QACPuV,SAAU,IAEZC,OAAQ,CACNxV,MAAO,WAmGIyV,GAhGgC,SAAC7O,GAC9C,IAAMxG,EAAUP,KADwC,EAEPqH,mBAAqB,IAFd,mBAEjDwO,EAFiD,KAEhCC,EAFgC,OAG1BzO,oBAAS,GAHiB,mBAGjDW,EAHiD,KAGxCC,EAHwC,KAKlD8N,EAAYC,qBAAWC,IAE7B3N,qBAAU,YACS,uCAAG,sBAAA5F,EAAA,kEAClBoT,EADkB,SACU5S,EAAY6D,EAAM/F,IAD5B,6EAAH,qDAGjBkV,GACAjO,GAAW,KACV,CAACD,IAEJ,IAAMmO,EAAiB,uCAAG,WAAOnV,GAAP,SAAA0B,EAAA,+EpB2BDS,EoBzBJnC,EpB0BrBqB,EAAMgC,OAAN,gBAAsBlB,SACtBnB,QAAQC,IAAI,oBoB7Bc,sDAItBD,QAAQC,IAAR,MAJsB,iCpB2BrB,IAAoBkB,IoB3BC,oBAAH,sDAQjBiT,EAAsB,uCAAG,WAAOpV,GAAP,SAAA0B,EAAA,+EAErB0B,EAAmBpD,GAFE,OAG3BgB,QAAQC,IAAI,kBAHe,+CAK3BD,QAAQC,IAAR,MAL2B,wDAAH,sDAWxBoU,EAAkBN,EAAUxL,KAAI,SAAC1H,GACnC,IADyD,IAAD,WAC/C6M,GACP,GAAI7M,EAAQ7B,KAAO6U,EAAgBnG,GAAGxL,WACpC,MAAM,CAAN,EACE,8BACE,cAAC6I,EAAA,EAAD,CAAMC,GAAI,EAAGC,MAAI,EAAjB,SACE,cAACsB,GAAA,EAAD,UACE,qBAAK9N,UAAU,MAAf,SACE,eAACgO,GAAA,EAAD,CAAUhO,UAAWF,EAAQoV,OAAQ9O,WAAW,aAAhD,UACE,cAACyP,GAAA,EAAD,UACE,cAAC/B,GAAA,EAAD,CAAQ3B,IAAK/P,EAAQ5B,KAAM0R,IAAK9P,EAAQ1B,YAE1C,cAAC2N,GAAA,EAAD,UAAejM,EAAQ5B,OACvB,cAACsV,GAAA,EAAD,CACEjW,QAAS,WACP2H,GAAW,IAFf,SAKE,cAAC0B,EAAA,EAAD,CACElJ,UAAU,UACV+R,KAAK,MACL7R,MAAO,CAAER,MAAO,SAChBG,QAAS,WACP8V,EAAuBP,EAAgBnG,GAAG1O,KAL9C,SAQE,cAAC,KAAD,kBAtBJ6B,EAAQ7B,MAHf0O,EAAI,EAAGA,EAAImG,EAAgB1J,OAAQuD,IAAK,CAAC,IAAD,IAAxCA,GAAwC,sCAsCnD,OACE,mCACE,eAAC5G,EAAA,EAAD,CAAMrI,UAAWF,EAAQ+F,KAAM+C,QAAQ,WAAvC,UACE,eAACH,EAAA,EAAD,CAAavI,MAAO,CAAEwE,gBAAiB,SAAvC,UACE,eAACgE,EAAA,EAAD,CACE1I,UAAWF,EAAQ0I,MACnB9I,MAAM,gBACNqW,cAAY,EAHd,yBAKc,qCACXzP,EAAM9F,QAET,8BAAMoV,OAER,cAACI,GAAA,EAAD,CAAanW,QAASyG,EAAM2P,OAAQ/V,MAAO,CAAEwE,gBAAiB,QAA9D,SACE,cAACwE,EAAA,EAAD,CAAYrJ,QAAS,kBAAM6V,EAAkBpP,EAAM/F,KAAnD,SACE,cAAC,KAAD,c,kDCJG2V,GAxG4B,SAAC5P,GAAW,IAAD,EACXM,mBAAkB,IADP,mBAC7CuP,EAD6C,KAChCC,EADgC,OAE5BtP,IAAMF,UAAS,GAFa,mBAE7C+C,EAF6C,KAEvC0M,EAFuC,OAGpBzP,mBAAS,IAHW,mBAG7CtD,EAH6C,KAGnCgE,EAHmC,OAItBV,oBAAS,GAJa,mBAI7CW,EAJ6C,KAIpCC,EAJoC,KAY9C8O,EAAc,WAClBD,GAAQ,IAENhS,EAAOkC,KAAKC,MAAMC,aAAaC,QAAQ,YAErC6P,EAAqB,GACrBpO,EAAU,uCAAG,WAAOzE,GAAP,eAAAzB,EAAA,sDACjByB,EAAE0E,iBACF,IACMhH,EAAO,CACTwB,OAAQyB,EAAKzB,OACbU,SAAUA,GAEZ/B,QAAQC,IAAI,WAAYJ,GACxB+B,EAAW/B,GACXoG,GAAW,GACX,MAAO9D,GACPnC,QAAQC,IAAI,cACZD,QAAQC,IAAIkC,GAZG,2CAAH,sDAgBhBmE,qBAAU,YACK,uCAAG,gCAAA5F,EAAA,sEACImC,EAAYC,EAAKzB,QADrB,OAGd,IAFI4T,EADU,OAERC,EAAQD,EAAMrS,UACX8K,EAAI,EAAGA,EAAIwH,EAAM/K,OAAQuD,IAChCsH,EAAU3C,KAAK6C,EAAMxH,IAGvBmH,EAAkB,GAAD,OAAKG,IAPR,2CAAH,qDASbG,GACAlP,GAAW,KACV,CAACD,IAEJ,IAAIoP,EAAc,WAChBnP,GAAW,IAEToP,EAAcT,EAAYrM,KAAI,SAAC+M,GACjC,OACE,eAACvK,EAAA,EAAD,CAAMC,GAAI,EAAGC,MAAI,EAAjB,UACE,uBAAUqK,EAAM5M,QAEhB,cAAC,GAAD,CACEgM,OAAQU,EACRpW,GAAIsW,EAAM5M,OACVzJ,KAAMqW,EAAMvT,iBAKpB,OACE,qCACE,cAACgJ,EAAA,EAAD,CAAMG,WAAS,EAACtG,QAAS,EAAzB,SACGyQ,IAEH,cAACvM,EAAA,EAAD,CAAQzB,QAAQ,WAAWlJ,MAAM,UAAUG,QAhEvB,WACtBwW,GAAQ,IA+DN,6BAIA,eAACS,GAAA,EAAD,CACEnN,KAAMA,EACNE,QAASyM,EACTS,kBAAgB,oBAHlB,UAKE,cAACC,GAAA,EAAD,CAAazW,GAAG,oBAAhB,sBACA,eAAC0W,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,8BACA,cAAC3M,EAAA,EAAD,CACE2J,WAAS,EACT/T,OAAO,QACPI,GAAG,OACHyI,MAAM,YACNrI,KAAK,OACLiH,MAAOtE,EACP8G,SAhFmB,SAAC1G,GAC5B4D,EAAY5D,EAAEiE,OAAOC,QAgFboM,WAAS,OAGb,eAACmD,GAAA,EAAD,WACE,cAAC9M,EAAA,EAAD,CAAQxK,QAASyW,EAAa5W,MAAM,UAApC,oBAGA,cAAC2K,EAAA,EAAD,CAAQ1J,KAAK,SAASd,QAASsI,EAAYzI,MAAM,UAAjD,8BCrHJoP,GAAc,WAEpB,SAASsI,GAAWC,GAClB,MAAM,GAAN,OAAUvI,GAAV,YAAyBuI,GAGpB,IAAMC,GAAW,uCAAG,kDAAArV,EAAA,6DACzBqN,EADyB,+BACR,EACjBD,EAFyB,+BAET,IAFS,SAKjBkI,EAAU,CACdnI,OAAQ,CACNE,SACAD,UARmB,SAWFvN,EAAQI,IAAI4M,GAAayI,GAXvB,uBAWjBnW,EAXiB,EAWjBA,KAGF8K,EAA+B9K,EAAK4N,QAAQlF,KAAI,SAAC0N,GACnD,OAAOC,GAAWD,EAAIhX,SAfD,UAmBVkB,QAAQgW,IAAIxL,GAnBF,iFAqBjB,IAAI1J,MArBa,0DAAH,qDAyBXiV,GAAU,uCAAG,WAAOJ,GAAP,mBAAApV,EAAA,+EAEDH,EAAQI,IAAIkV,GAAWC,IAFtB,uBAEhBjW,EAFgB,EAEhBA,MAEFgB,EAAU,IAAI9B,GACVC,GAAKa,EAAKb,GAClB6B,EAAQ5B,KAAOY,EAAKZ,KACpB4B,EAAQ1B,QAAUU,EAAKiB,QAAQC,cAC/BF,EAAQ3B,OAASW,EAAKX,OACtB2B,EAAQzB,KAAO,CACbS,EAAKmB,MAAM,GAAG5B,KAAKH,KACnBY,EAAKmB,MAAM,IAAMnB,EAAKmB,MAAM,GAAG5B,KAAKH,MAXhB,kBAaf4B,GAbe,wCAehB,IAAII,MAfY,0DAAH,sDCtBVmV,GAAqC,WAAO,IAAD,EACxB/Q,mBAAoB,IADI,mBAC/CgR,EAD+C,KACtCC,EADsC,OAEZjR,mBAAkB,CAC1DpG,KAAM,YACND,GAAI,EACJE,OAAQ,GACRC,QACE,iFACFC,KAAM,CAACrB,EAAYwY,MAAOxY,EAAYyY,UARc,mBAE/CC,EAF+C,KAEhCC,EAFgC,OAUhBrR,oBAAS,GAVO,mBAU/CsR,EAV+C,KAUlCC,EAVkC,KAYhDnW,EAAS,WACb,IAAMoW,EAAMjN,KAAKC,KAAK,GAChBiN,EAAMlN,KAAKmN,MAAM,KACvB,OAAOnN,KAAKmN,MAAMnN,KAAKoN,UAAYF,EAAMD,EAAM,IAAMA,GAGvD7W,QAAQC,IAAIQ,KAEZ6F,qBAAU,YACRtG,QAAQC,IAAI,iBAER0W,IACS,uCAAG,sBAAAjW,EAAA,kEACZgW,EADY,SACWlW,EAAcC,KADzB,6EAAH,oDAGXwW,GAGFL,GAAe,KACd,CAACD,IAEJ3W,QAAQC,IAAIwW,GAEZ,IAkBIS,EAAiBb,EAAQ9N,KAAI,SAAC1H,GAChC,OACE,mCACE,cAACkK,EAAA,EAAD,CAAME,MAAI,EAACD,GAAI,EAAGmM,aAAa,aAA/B,SACE,cAAC,EAAD,CAAgBtW,QAASA,KADsBA,EAAQ7B,SAO3DoY,EAAuB,WACzB,OACE,mCACC,eAACrM,EAAA,EAAD,CACGG,WAAS,EACTmM,UAAU,SACVC,QAAQ,SACRzS,WAAW,SACXD,QAAS,EALZ,UAOK,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACD,GAAI,GAAf,SACF,cAAC,EAAD,CAAgBnK,QAAS4V,MAEzB,eAAC1L,EAAA,EAAD,CAAME,MAAI,EAACD,GAAI,GAAf,UAEE,cAAClC,EAAA,EAAD,CACEzB,QAAQ,WACRlJ,MAAM,UACNG,QAAS,kBA1CJuC,EA0CoB4V,EAzCnCH,GAAW,SAACiB,GAGV,OADEA,EAAUxI,QAAO,SAACyI,GAAD,OAAU3W,EAAQ7B,IAAMwY,EAAKxY,MAAImL,OAAS,EAIpDoN,EAFD,GAAN,mBAAWA,GAAX,CAAsB1W,YAM1B+V,GAAe,GAXD,IAAC/V,GAuCP,mBASA,cAACiI,EAAA,EAAD,CACEzB,QAAQ,WACRlJ,MAAM,YACNG,QAAS,kBAAMsY,GAAe,IAHhC,2BAgBV,OACE,qCAEI,cAACQ,EAAD,IAGA,cAACrM,EAAA,EAAD,CACEG,WAAS,EACTmM,UAAU,MACVC,QAAQ,aACRzS,WAAW,aACXD,QAAS,EALX,SAOGsS,QCrHIO,GAT8B,WAM3C,OALAvG,GAAKnB,SACWoC,cAERE,KAAK,KAEN,MCkBTqF,IAAQC,IAAIC,IAAKC,IAAQC,KAClB,IAAM7D,GAAiB1O,IAAMwS,mBAAmBC,GAC1CC,GAAc1S,IAAMwS,mBAAmBC,GA6CrCE,OA5Cf,WAAgB,IAAD,EACc7S,qBADd,mBACNvC,EADM,aAEmBuC,mBAAoB,KAFvC,mBAENsF,EAFM,KAEIwN,EAFJ,KAYb,OATA7R,qBAAU,YACY,uCAAG,4BAAA5F,EAAA,sEACAqV,KADA,OACjBpL,EADiB,OAGrBwN,EAAYxN,GAHS,2CAAH,qDAKpBkE,KACC,IAGD,cAACoJ,GAAYG,SAAb,CAAsB/R,MAAOvD,EAA7B,SACE,cAACmR,GAAemE,SAAhB,CAAyB/R,MAAOsE,EAAhC,SACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmG,KAAK,SAASxJ,UAAWyK,KAChC,cAAC,IAAD,CAAOjB,KAAK,UAAUxJ,UAAWmQ,KACjC,cAAC,GAAD,CACE3G,KAAK,OACLE,OAAQ,kBAAM,cAAC,GAAD,CAAerG,SAAUA,OAEzC,cAAC,GAAD,CAAgBmG,KAAK,SAASxJ,UAAWqN,KACzC,cAAC,IAAD,CAAO7D,KAAK,YAAYxJ,UAAWuL,KACnC,cAAC,IAAD,CACE/B,KAAK,YACLE,OAAQ,kBAAM,cAAC,GAAD,CAASrG,SAAUA,OAEnC,cAAC,GAAD,CACEmG,KAAK,QACLE,OAAQ,kBAAM,cAAC,GAAD,CAAMrG,SAAUA,OAEhC,cAAC,IAAD,CAAOmG,KAAK,aAAaxJ,UAAWoJ,KACpC,cAAC,IAAD,CAAU2H,OAAK,EAAChH,KAAK,IAAIzE,GAAG,cAC5B,cAAC,IAAD,CAAUA,GAAG,0BCrDV0L,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAAS/H,OAAO,cAAC,GAAD,IAASgI,SAASC,eAAe,SAKjDX,O","file":"static/js/main.8249f32a.chunk.js","sourcesContent":["export class Pokemon {\r\n  id: number;\r\n  name: string;\r\n  weight: number;\r\n  picture: string; //url to the remote photo\r\n  type: [PokemonType, PokemonType | null];\r\n}\r\n\r\nexport enum PokemonType {\r\n  Flying = \"flying\",\r\n  Fire = \"fire\",\r\n  Normal = \"normal\",\r\n  Fighting = \"fighting\",\r\n  Water = \"water\",\r\n  Grass = \"grass\",\r\n  Poison = \"poison\",\r\n  Electric = \"electric\",\r\n  Ground = \"ground\",\r\n  Psychic = \"psychic\",\r\n  Rock = \"rock\",\r\n  Ice = \"ice\",\r\n  Bug = \"bug\",\r\n  Dragon = \"dragon\",\r\n  Ghost = \"ghost\",\r\n  Dark = \"dark\",\r\n  Steel = \"steel\",\r\n  Fairy = \"fairy\",\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst useStyles = makeStyles({\r\n  regular: {\r\n    color: \"white\",\r\n  },\r\n  liked: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst Like: React.FunctionComponent<any> = ({ liked, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FontAwesomeIcon\r\n      icon=\"heart\"\r\n      className={liked ? classes.liked : classes.regular}\r\n      size={\"lg\"}\r\n      style={{\r\n        margin: \"0 5\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={onClick}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(\r\n  ({ data }: AxiosResponse) => data,\r\n  (error) => {\r\n    const expectedError =\r\n      error.response &&\r\n      error.response.status >= 400 &&\r\n      error.response.status < 500;\r\n\r\n    if (!expectedError) {\r\n      console.log(error);\r\n      toast.error(\"An unexpected error occurrred.\");\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const dbApi = axios.create({ baseURL: \"http://ec2-3-96-46-240.ca-central-1.compute.amazonaws.com:10000\" });\r\nexport const pokeApi = axios.create({\r\n  baseURL: \"https://pokeapi.co/api/v2\",\r\n});\r\n","import { Pokemon } from \"../models/Pokemon\";\r\nimport { TeamList, Teams } from \"../models/User\";\r\nimport { dbApi, pokeApi } from \"./httpService\";\r\nconst apiEndpoint = \"/pokemon\";\r\n\r\nfunction pokemonUrl(id: Number) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getPokemons() {\r\n  return pokeApi.get(apiEndpoint);\r\n}\r\n\r\nexport function getPokemon(id: Number) {\r\n  return pokeApi.get(pokemonUrl(id));\r\n}\r\n\r\nexport const getOnePokemon = async (pokeId: number): Promise<Pokemon> => {\r\n  try {\r\n    let res = await pokeApi.get(`/pokemon/${pokeId}`);\r\n\r\n    let pokemon = new Pokemon();\r\n    pokemon.id = res.data.id;\r\n    pokemon.name = res.data.name;\r\n    pokemon.picture = res.data.sprites.front_default;\r\n    pokemon.weight = res.data.weight;\r\n    pokemon.type = [\r\n      res.data.types[0].type.name,\r\n      res.data.types[1] && res.data.types[1].type.name,\r\n    ];\r\n    return pokemon;\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const getTeamById = async (teamId: number): Promise<any> => {\r\n  try {\r\n    let res = await dbApi.get(`/team/${teamId}`);\r\n\r\n    return res.data;\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport function deletePokeFromFavorite(favUserId: number, favPokeId: number) {\r\n  dbApi.post(`/favorite/deletfav/`, { favUserId, favPokeId });\r\n  console.log(\"deleted\");\r\n}\r\n\r\nexport const getfavList = async (userId: number): Promise<any> => {\r\n  try {\r\n    let res = await dbApi.get(`/user/${userId}`);\r\n\r\n    return res.data.favlist;\r\n    // wait for all request to finish\r\n  } catch (e) {}\r\n};\r\n\r\nexport const addFav = async (\r\n  favUserId: number,\r\n  favPokeId: number\r\n): Promise<any> => {\r\n  let favarate = {\r\n    favUserId,\r\n    favPokeId,\r\n  };\r\n\r\n  try {\r\n    let res = await dbApi.post(\"/favorite\", favarate);\r\n\r\n    // console.log(res.data)\r\n    return res.data;\r\n  } catch (e) {}\r\n};\r\n\r\nexport class TeamNew {\r\n  userId: number;\r\n  teamName: string;\r\n}\r\nexport function createTeam(team: TeamNew) {\r\n  return dbApi.post(`/team`, {\r\n    teamUserId: team.userId,\r\n    teamName: team.teamName,\r\n  });\r\n}\r\nexport function deleteTeam(teamId: number) {\r\n  dbApi.delete(`/team/${teamId}`);\r\n  console.log(\"Success deleted!\");\r\n}\r\n\r\nexport function addPokeToTeam(teamId: any, pokeId: number) {\r\n  try {\r\n    dbApi.post(`/team/addpoke`, {\r\n      teamListTeamId: teamId,\r\n      teamPokeId: pokeId,\r\n    });\r\n    console.log(\"Success submitted\");\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function deletePokeFromTeam(id: number) {\r\n  try {\r\n    dbApi.delete(`/team/deletpoke/${id}`);\r\n    console.log(\"delete success!\");\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n","export class User {\r\n  userId: number;\r\n  userName: string;\r\n  userPassword: string;\r\n  userFirstName: string;\r\n  userLastName: string;\r\n  userFavorites: [Favorites];\r\n  userTeams: [Teams];\r\n}\r\n\r\nexport class Favorites {\r\n  favId: number;\r\n  favPokeId: number;\r\n}\r\n\r\nexport class Teams {\r\n  teamid: number;\r\n  teamName: string;\r\n  teamList: [TeamList];\r\n}\r\n\r\nexport class TeamList {\r\n  id: number;\r\n  teamPokeId: number;\r\n}\r\n","import { User } from \"../models/User\";\r\nimport { dbApi } from \"./httpService\";\r\nexport class UserR {\r\n  userName: string;\r\n  userPassword: string;\r\n  userFirstName: string;\r\n  userLastName: string;\r\n}\r\nconst apiEndpoint = \"/user\";\r\nexport function register(user: UserR) {\r\n  return dbApi.post(apiEndpoint, {\r\n    // userId:user.userId,\r\n    userName: user.userName,\r\n    userPassword: user.userPassword,\r\n    userFirstname: user.userFirstName,\r\n    userLastname: user.userLastName,\r\n  });\r\n}\r\n\r\nexport const getUserById = async (id: number): Promise<User> => {\r\n  try {\r\n    let res = await dbApi.get(`/user/${id}`);\r\n    let user = new User();\r\n    user.userId = res.data.userId;\r\n    user.userName = res.data.userName;\r\n    user.userPassword = res.data.userPassword;\r\n    user.userFirstName = res.data.userFirstname;\r\n    user.userLastName = res.data.userLastname;\r\n    user.userFavorites = res.data.favlist;\r\n    user.userTeams = res.data.teams;\r\n    return user;\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Checkbox,\r\n  Chip,\r\n  Divider,\r\n  IconButton,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Pokemon, PokemonType } from \"../models/Pokemon\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Like from \"./common/like\";\r\n\r\nimport {\r\n  addFav,\r\n  addPokeToTeam,\r\n  createTeam,\r\n  deletePokeFromFavorite,\r\n  getfavList,\r\n  getTeamById,\r\n} from \"../services/pokemonServices\";\r\nimport { Favorites, Teams } from \"../models/User\";\r\nimport { getUserById } from \"../services/userService\";\r\nimport { userInfo } from \"os\";\r\n\r\nconst types = {\r\n  flying: {\r\n    backgroundColor: \"#A890F0\",\r\n  },\r\n  fire: {\r\n    backgroundColor: \"#F08030\",\r\n  },\r\n  normal: {\r\n    backgroundColor: \"#A8A878\",\r\n  },\r\n  fighting: {\r\n    backgroundColor: \"#C03028\",\r\n  },\r\n  water: {\r\n    backgroundColor: \"#6890F0\",\r\n  },\r\n  grass: {\r\n    backgroundColor: \"#78C850\",\r\n  },\r\n  poison: {\r\n    backgroundColor: \"#A040A0\",\r\n  },\r\n  electric: {\r\n    backgroundColor: \"#F8D030\",\r\n  },\r\n  ground: {\r\n    backgroundColor: \"#E0C068\",\r\n  },\r\n  psychic: {\r\n    backgroundColor: \"#F85888\",\r\n  },\r\n  rock: {\r\n    backgroundColor: \"#B8A038\",\r\n  },\r\n  ice: {\r\n    backgroundColor: \"#98D8D8\",\r\n  },\r\n  bug: {\r\n    backgroundColor: \"#A8B820\",\r\n  },\r\n  dragon: {\r\n    backgroundColor: \"#7038F8\",\r\n  },\r\n  ghost: {\r\n    backgroundColor: \"#705898\",\r\n  },\r\n  dark: {\r\n    backgroundColor: \"#705848\",\r\n  },\r\n  steel: {\r\n    backgroundColor: \"#B8B8D0\",\r\n  },\r\n  fairy: {\r\n    backgroundColor: \"#EE99AC\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 200,\r\n    maxWidth: 300,\r\n  },\r\n  picture: {\r\n    height: 225,\r\n  },\r\n  cardContent: {\r\n    backgroundColor: \"#373737\",\r\n  },\r\n  faIcon: {\r\n    color: \"white\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  icon: {\r\n    alignItems: \"left\",\r\n  },\r\n  ...types,\r\n}));\r\n\r\ninterface IPokemonDisplayProps {\r\n  pokemon: Pokemon;\r\n  favorite?: Favorites;\r\n  isfavorite?: Boolean;\r\n  trigger?: any;\r\n}\r\n\r\nexport const PokemonDisplay: React.FunctionComponent<IPokemonDisplayProps> = (\r\n  props\r\n) => {\r\n  var user = JSON.parse(localStorage.getItem(\"userKey\")!);\r\n  const userid = user ? user.userId : null;\r\n\r\n  const [liked, setLiked] = useState<boolean>(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [createNewTeam, setCreateNewTeam] = React.useState<boolean>(false);\r\n  const [favoritesList, changeFavoritesList] = useState<Favorites[]>([]);\r\n  const classes = useStyles();\r\n  const [teamList, setTeamList] = useState<Teams[]>([]);\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [teamId, setTeam] = useState(\"\");\r\n  const [checked, setChecked] = useState<boolean>(false);\r\n  const handleTeamId = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTeam(e.target.value);\r\n  };\r\n  const handleTeamNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTeamName(e.target.value);\r\n  };\r\n\r\n\r\n \r\n\r\n\r\n  useEffect(() => {\r\n    if (props.isfavorite) {\r\n      setLiked(!liked);\r\n    }\r\n\r\n   if(userid !== null) {\r\n    let getFavList = async () => {\r\n      changeFavoritesList(await getfavList(userid));\r\n    };\r\n    getFavList();\r\n\r\n    let getTeams = async () => {\r\n      let userTeamInfo = await getUserById(userid);\r\n      setTeamList(userTeamInfo.userTeams);\r\n    };\r\n\r\n    getTeams();\r\n\r\n  }\r\n    setRefresh(false);\r\n  }, [refresh]);\r\n\r\n  const addPokemon = async () => {\r\n    try {\r\n      addPokeToTeam(teamId, props.pokemon.id);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const submitTeam = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      var data = {\r\n        userId: userid,\r\n        teamName: teamName,\r\n      };\r\n      createTeam(data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handlePlusClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setCreateNewTeam(false);\r\n  };\r\n\r\n  const handlePlusClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLikeClick = () => {\r\n    if (!user) {\r\n      //TODO redirect to login\r\n      return;\r\n    }\r\n    setLiked(!liked);\r\n\r\n    console.log(liked);\r\n    if (!liked) {\r\n      let getFavList = async () => {\r\n        await addFav(userid, props.pokemon.id);\r\n      };\r\n      getFavList();\r\n    } else if (liked) {\r\n      console.log(\"i am deleting\");\r\n\r\n      let deletFav = async () => {\r\n        deletePokeFromFavorite(userid, props.pokemon.id);\r\n      };\r\n      deletFav();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root + \" \" + classes.steel}>\r\n      <CardMedia\r\n        className={classes.picture}\r\n        style={{ backgroundColor: \"black\" }}\r\n        image={props.pokemon.picture}\r\n        title={`Picture of ${props.pokemon.name}`}\r\n      />\r\n      <CardContent className={classes.cardContent}>\r\n        <div className=\"row\">\r\n          <Typography\r\n            style={{ color: \"white\", marginLeft: 15 }}\r\n            variant=\"h5\"\r\n            component=\"h3\"\r\n          >\r\n            {props.pokemon.name}\r\n          </Typography>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Chip\r\n            className={classes[props.pokemon.type[0]]}\r\n            style={{ marginLeft: 15, marginRight: 5 }}\r\n            label={props.pokemon.type[0]}\r\n          />\r\n          {props.pokemon.type[1] && (\r\n            <Chip\r\n              className={classes[props.pokemon.type[1]]}\r\n              label={props.pokemon.type[1]}\r\n            />\r\n          )}\r\n          <div\r\n            className=\"ml-auto\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <IconButton\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handlePlusClick}\r\n              style={{ padding: 0 }}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon=\"plus\"\r\n                className={classes.faIcon}\r\n                style={{\r\n                  margin: \"0 5\",\r\n                  cursor: \"pointer\",\r\n                  outline: \"none\",\r\n                }}\r\n              />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handlePlusClose}\r\n            >\r\n              {teamList.map((team) => (\r\n                <MenuItem disableRipple key={team.teamid}>\r\n                  <input\r\n                    color=\"primary\"\r\n                    type=\"radio\"\r\n                    name=\"tName\"\r\n                    value={team.teamid}\r\n                    key={team.teamid}\r\n                    checked={teamId === team.teamid.toString()}\r\n                    onChange={handleTeamId}\r\n                  />\r\n                  {team.teamName}\r\n                </MenuItem>\r\n              ))}\r\n              <Button onClick={addPokemon}>Add pokemon</Button>\r\n              <Divider />\r\n              {createNewTeam ? (\r\n                <section>\r\n                  <MenuItem disableRipple>\r\n                    <TextField\r\n                      required\r\n                      id=\"standard-required\"\r\n                      label=\"Name\"\r\n                      placeholder=\"Enter team name...\"\r\n                      value={teamName}\r\n                      onChange={handleTeamNameChange}\r\n                      style={{ marginLeft: 16, marginRight: 16 }}\r\n                    />\r\n                  </MenuItem>\r\n                  <MenuItem disableRipple onClick={() => setRefresh(true)}>\r\n                    <Button\r\n                      onClick={submitTeam}\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className={\"ml-auto\"}\r\n                    >\r\n                      Create\r\n                    </Button>\r\n                  </MenuItem>\r\n                </section>\r\n              ) : (\r\n                <MenuItem onClick={() => setCreateNewTeam(true)}>\r\n                  <FontAwesomeIcon icon=\"plus\" style={{ width: 42 }} />\r\n                  new team\r\n                </MenuItem>\r\n              )}\r\n            </Menu>\r\n            <div onClick={props.trigger}>\r\n              <Like liked={liked} onClick={handleLikeClick} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\ninterface IPagination {\r\n  itemsCount: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  onPageChange: (page: number) => void;\r\n}\r\nconst Pagination: React.FunctionComponent<IPagination> = ({\r\n  itemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChange,\r\n}) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n\r\n  const pages: number[] = _.range(1, pageCount + 1);\r\n\r\n  let secondPagesArr: number[] = pages.slice(currentPage-1,currentPage+4);\r\n\r\n  if (currentPage === pages[pages.length-1]){\r\n    secondPagesArr = pages.slice(currentPage-5, currentPage);\r\n  }\r\n\r\n  if (secondPagesArr.length<5){\r\n    let count:number = 5-secondPagesArr.length;\r\n    secondPagesArr.unshift(...pages.slice((currentPage-1) - count, currentPage-1));\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\" style={{paddingTop:\"1vw\"}}>\r\n\r\n      {currentPage > pages[0] ?\r\n            <li style={{paddingRight:\"1vw\"}}>\r\n            <a className=\"page-link\" onClick={() => onPageChange(currentPage-1)}>\r\n              Previous\r\n            </a>\r\n          </li>\r\n          : ''\r\n      }\r\n      {currentPage > pages[0] ?\r\n        <li>\r\n          <a className=\"page-link\" onClick={() => onPageChange(1)}>\r\n            1\r\n          </a>\r\n        </li>\r\n        : ''\r\n      }\r\n      {currentPage > pages[0] ?\r\n            <li>\r\n            <a className=\"page-link\">\r\n              ...\r\n            </a>\r\n          </li>\r\n          : ''\r\n      }\r\n        {secondPagesArr.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n        {currentPage < pages[pages.length-5] ?\r\n            <li>\r\n            <a className=\"page-link\">\r\n              ...\r\n            </a>\r\n          </li>\r\n          : ''\r\n          }\r\n        {currentPage < pages[pages.length-5] ?\r\n          <li>\r\n          <a className=\"page-link\" onClick={() => onPageChange(pageCount)}>\r\n            {pageCount}\r\n          </a>\r\n        </li>\r\n          : \"\"\r\n        }\r\n        {currentPage < pages[pages.length-1]  ?\r\n            <li  style={{paddingLeft:\"1vw\"}}>\r\n            <a className=\"page-link\" onClick={() => onPageChange(currentPage+1)}>\r\n              Next\r\n            </a>\r\n          </li>\r\n          : ''\r\n      }\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { Pokemon } from \"../models/Pokemon\";\r\nimport { PokemonDisplay } from \"./pokemonDisplay\";\r\nimport Pagination from \"./common/pagination\";\r\n\r\ninterface IPokemonsGrid {\r\n  pokemons: Pokemon[];\r\n}\r\nexport const PokemonsGrid: React.FunctionComponent<IPokemonsGrid> = ({\r\n  pokemons,\r\n}) => {\r\n  const [pageSize, setPageSize] = useState<number>(9);\r\n  const [currPage, setCurrPage] = useState<number>(1);\r\n\r\n  let pokemonDisplays = pokemons.map((pokemon) => {\r\n    return (\r\n      <Grid key={pokemon.id} xs={4} item>\r\n        <PokemonDisplay pokemon={pokemon} />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        {pokemonDisplays}\r\n      </Grid>\r\n      <Pagination\r\n        itemsCount={pokemons.length}\r\n        pageSize={pageSize}\r\n        currentPage={currPage}\r\n        onPageChange={setCurrPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonsGrid;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport SportsEsportsTwoToneIcon from \"@material-ui/icons/SportsEsportsTwoTone\";\r\nimport FavoriteTwoToneIcon from \"@material-ui/icons/FavoriteTwoTone\";\r\nimport PeopleOutlineTwoToneIcon from \"@material-ui/icons/PeopleOutlineTwoTone\";\r\n\r\nconst drawerWidth = 175;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    toolbar: {\r\n      zIndex: -1,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n\r\n  const renderSwitch = (index: number): any => {\r\n    switch (index) {\r\n      case 0:\r\n        return <FavoriteTwoToneIcon />;\r\n      case 1:\r\n        return <PeopleOutlineTwoToneIcon />;\r\n      case 2:\r\n        return <SportsEsportsTwoToneIcon />;\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <Divider />\r\n\r\n        <List>\r\n          {[\r\n            [\"Favourites\", \"/fav\"],\r\n            [\"Teams\", \"/teams\"],\r\n            [\"Game\", \"/game\"],\r\n          ].map((el, index) => (\r\n            <ListItem button key={el[0]} component={Link} to={el[1]}>\r\n              <ListItemIcon>{renderSwitch(index)}</ListItemIcon>\r\n              <ListItemText primary={el[0]} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\ninterface IVertListGroup {\r\n  items: any[];\r\n  textProperty?: string;\r\n  valueProperty?: string;\r\n  selectedItem: any;\r\n  onItemSelect: any;\r\n  isHorizontal?: boolean;\r\n}\r\nconst ListGroup: React.FunctionComponent<IVertListGroup> = ({\r\n  items,\r\n  textProperty = \"name\",\r\n  valueProperty = \"_id\",\r\n  selectedItem,\r\n  onItemSelect,\r\n  isHorizontal = false,\r\n}) => {\r\n  return (\r\n    <ul\r\n      className={\"list-group\" + (isHorizontal ? \" list-group-horizontal\" : \"\")}\r\n    >\r\n      {items.map((item) => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","import { pokeApi } from \"../httpService\";\r\n\r\nconst apiEndpoint = \"/generation\";\r\n\r\nexport function generationUrl(identifier: any) {\r\n  return `${apiEndpoint}/${identifier}`;\r\n}\r\n\r\nexport async function getGenerations() {\r\n  const { data } = await pokeApi.get(apiEndpoint);\r\n\r\n  let results: any[] = data.results;\r\n  for (let i = 1; i <= results.length; i++) {\r\n    results[i - 1]._id = i;\r\n  }\r\n\r\n  return results;\r\n}\r\n","import { pokeApi } from \"../httpService\";\r\n\r\nconst apiEndpoint = \"/type\";\r\n\r\nexport function typeUrl(identifier: any) {\r\n  return `${apiEndpoint}/${identifier}`;\r\n}\r\n\r\nexport async function getTypes() {\r\n  const { data } = await pokeApi.get(apiEndpoint, {\r\n    params: {\r\n      limit: 18,\r\n      offset: 0,\r\n    },\r\n  });\r\n\r\n  let results: any[] = data.results;\r\n  for (let i = 1; i <= results.length; i++) {\r\n    results[i - 1]._id = i;\r\n  }\r\n\r\n  return results;\r\n}\r\n","import React from \"react\";\r\n\r\nconst SearchBox: React.FunctionComponent<any> = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PokemonsGrid from \"./pokemonsGrid\";\r\nimport SideBar from \"./sideBar\";\r\nimport ListGroup from \"./common/listGroup\";\r\n\r\nimport { getPokemons } from \"../services/pokeServices/pokemonService\";\r\nimport { getGenerations } from \"../services/pokeServices/generationService\";\r\nimport { getTypes } from \"../services/pokeServices/typeService\";\r\nimport { Pokemon, PokemonType } from \"../models/Pokemon\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport Pagination from \"./common/pagination\";\r\n\r\ninterface IPokedex {\r\n  pokemons: Pokemon[];\r\n}\r\nconst Pokedex: React.FunctionComponent<IPokedex> = ({ pokemons }) => {\r\n  const [categories, setCategories] = useState<any[]>([\r\n    { name: \"generation\" },\r\n    { name: \"type\" },\r\n  ]);\r\n  const [filters, setFilters] = useState<any[]>([]);\r\n  const [generations, setGenerations] = useState<any[]>([]);\r\n  const [types, setTypes] = useState<any[]>([]);\r\n\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [pageSize, setPageSize] = useState<number>(9);\r\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState<any>({\r\n    name: \"type\",\r\n  });\r\n  const [selectedFilter, setSelectedFilter] = useState<any>(null);\r\n  const [selectedType, setSelectedType] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    const initializeData = async () => {\r\n      let data = await getGenerations();\r\n      const generations = [{ _id: \"\", name: \"All Generations\" }, ...data];\r\n\r\n      data = await getTypes();\r\n      const types = [{ _id: \"\", name: \"All Types\" }, ...data];\r\n\r\n      setGenerations(generations);\r\n      setTypes(types);\r\n\r\n      setFilters(types);\r\n    };\r\n    initializeData();\r\n  }, []);\r\n\r\n  const handleCategorySelect = (category: any) => {\r\n    setSelectedCategory(category);\r\n    switch (category.name) {\r\n      case \"generation\":\r\n        setFilters(generations);\r\n        break;\r\n      case \"type\":\r\n        setFilters(types);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleFilterSelect = (filter: any) => {\r\n    setSelectedFilter(filter);\r\n    setSearchQuery(\"\");\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleSearch = (query: string) => {\r\n    setSearchQuery(query);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // this is new search function  ------------------------------\r\n\r\n  const getPageData = (): any => {\r\n    let filtered = pokemons;\r\n    if (selectedCategory && selectedFilter && selectedFilter._id) {\r\n      switch (selectedCategory.name) {\r\n        case \"generation\":\r\n          break;\r\n        case \"type\":\r\n          filtered = pokemons.filter(\r\n            (p) =>\r\n              p.type[0] == selectedFilter.name ||\r\n              p.type[1] == selectedFilter.name\r\n          );\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (searchQuery) {\r\n      filtered = filtered.filter((p) =>\r\n        p.name.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    }\r\n\r\n    const currPagePokemons = paginate(filtered, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, currPagePokemons };\r\n  };\r\n  const { totalCount, currPagePokemons } = getPageData();\r\n\r\n  return (\r\n    <div className=\"row\" style={{ margin: 0 }}>\r\n      <div className=\"col-2\">\r\n        <SideBar />\r\n      </div>\r\n      <div className=\"col-2\" style={{ marginTop: \"2vw\" }}>\r\n        {/* <ListGroup\r\n          items={categories}2\r\n          selectedItem={selectedCaqtegory}\r\n          onItemSelect={handleCategorySelect}\r\n          textProperty=\"name\"\r\n          valueProperty=\"name\"\r\n          isHorizontal={true}\r\n        /> */}\r\n        <ListGroup\r\n          items={filters}\r\n          selectedItem={selectedFilter}\r\n          onItemSelect={handleFilterSelect}\r\n        />\r\n      </div>\r\n      <div className=\"col-8\" style={{ marginTop: \"1vw\" }}>\r\n        <SearchBox value={searchQuery} onChange={handleSearch} />\r\n        <PokemonsGrid pokemons={currPagePokemons} />\r\n        <Pagination\r\n          itemsCount={totalCount}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={setCurrentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items: any[], pageNumber: number, pageSize: number) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import { dbApi } from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\n//const userKey = \"user\";\r\n\r\nexport async function login(userName: string, userPassword: string) {\r\n  try {\r\n    let res = await dbApi.post(apiEndpoint, { userName, userPassword });\r\n    localStorage.setItem(\"userKey\", JSON.stringify(res.data));\r\n    //localStorage.setItem(userKey,res.data);\r\n\r\n    console.log(localStorage.getItem(\"userKey\"));\r\n    return res.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n    if (e.response) {\r\n      throw new Error(e.response.data);\r\n    } else {\r\n      throw new Error(\"OOps Something went wrong?\");\r\n    }\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(\"userKey\");\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const user = localStorage.getItem(\"userKey\");\r\n    return user;\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport authService from \"../services/authService\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nconst Navbar: React.FunctionComponent<any> = () => {\r\n  const classes = useStyles();\r\n  const currUser = authService.getCurrentUser();\r\n  \r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        className={classes.appBar}\r\n        position=\"fixed\"\r\n        style={{ backgroundColor: \"#c91104\", width: \"100vw\" }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            component={Link}\r\n            to=\"/\"\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Home\r\n          </Typography>\r\n        \r\n            <div>\r\n            <Button color=\"inherit\" component={Link} to=\"/login\">\r\n              Login\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/register\">\r\n              Register\r\n            </Button>\r\n          </div>\r\n           \r\n            <Button color=\"inherit\" component={Link} to=\"/logout\">\r\n              Logout\r\n            </Button>\r\n        \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const NotFound: React.FunctionComponent<any> = () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"/page404_LI.jpg\"}\r\n        alt=\"Page not found\"\r\n        style={{width:\"100%\", height:\"50vw\"}}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\n\r\nconst ProtectedRoute: React.FunctionComponent<any> = ({\r\n  path,\r\n  component: Component,\r\n  render,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser()) {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        } else {\r\n          return Component ? <Component {...props} /> : render(props);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, {SyntheticEvent, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { User } from '../../models/User';\r\nimport { login } from '../../services/authService';\r\nimport { toast } from 'react-toastify';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { getUserById } from '../../services/userService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItem: \"center,\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login: React.FunctionComponent<any> = (props) => {\r\n  const [userName, changeUsername] = useState(\"\");\r\n  const [userPassword, changePassword] = useState(\"\");\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changePassword(e.target.value);\r\n  };\r\n  const submitLogin = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await login(userName, userPassword);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      changePassword(\"\");\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={submitLogin}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Username\"\r\n            name=\"email\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            value={userName}\r\n            onChange={handleUsernameChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={userPassword}\r\n            onChange={handlePasswordChange}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { SyntheticEvent } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { useState } from \"react\";\r\nimport { User } from \"../../models/User\";\r\nimport { register } from \"../../services/userService\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItem: \"center,\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ninterface IRegisterProps {\r\n  registerUser: (u: User) => void;\r\n}\r\nconst Register: React.FunctionComponent<IRegisterProps> = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [userFirstName, changeFirstName] = useState(\"\");\r\n  const [userLastName, changeLastName] = useState(\"\");\r\n  const [userName, changeUsername] = useState(\"\");\r\n  const [userPassword, changePassword] = useState(\"\");\r\n\r\n  const handleFirstNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeFirstName(e.target.value);\r\n  };\r\n\r\n  const handleLastNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeLastName(e.target.value);\r\n  };\r\n\r\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changePassword(e.target.value);\r\n  };\r\n\r\n  const submitRegister = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      var data = {\r\n        userId: 0,\r\n        userFirstName: userFirstName,\r\n        userLastName: userLastName,\r\n        userName: userName,\r\n        userPassword: userPassword,\r\n      };\r\n      register(data);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AddCircleIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={submitRegister}>\r\n          <TextField\r\n            //variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"firstName\"\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            autoComplete=\"Name\"\r\n            autoFocus\r\n            value={userFirstName}\r\n            onChange={handleFirstNameChange}\r\n          />\r\n          <TextField\r\n            // variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            id=\"lastName\"\r\n            autoComplete=\"Surname\"\r\n            value={userLastName}\r\n            onChange={handleLastNameChange}\r\n          />\r\n          <TextField\r\n            // variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            value={userName}\r\n            onChange={handleUsernameChange}\r\n          />\r\n          <TextField\r\n            // variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            autoComplete=\"password\"\r\n            autoFocus\r\n            value={userPassword}\r\n            onChange={handlePasswordChange}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                {\"Already have an account? Login\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default Register;\r\n","import { Grid, IconButton } from \"@material-ui/core\";\r\nimport React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Pokemon, PokemonType } from \"../models/Pokemon\";\r\nimport { getCurrentUser } from \"../services/authService\";\r\nimport { deletePokeFromFavorite, getfavList, getOnePokemon } from \"../services/pokemonServices\";\r\nimport { PokemonDisplay } from \"./pokemonDisplay\";\r\nimport { Favorites, User } from \"../models/User\";\r\nimport { pokeApi } from \"../services/httpService\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Pagination from \"./common/pagination\";\r\n\r\n\r\n\r\ninterface IPokemonDisplayProps {\r\n  pokemons: Pokemon[];\r\n\r\n}\r\n\r\n\r\n\r\nconst FavoritesList: React.FunctionComponent<IPokemonDisplayProps> = ({ pokemons }) => {\r\n\r\n  const [favotiteList, changeFavoriteList] = useState<Favorites[]>([])\r\n  const [favListOfPoke, changeFavListOfPoke] = useState<Pokemon[]>([])\r\n  const [pageSize, setPageSize] = useState<number>(9);\r\n  const [currPage, setCurrPage] = useState<number>(1);\r\n  const [newData, setNewData] = useState<Boolean>(false)\r\n  var user = JSON.parse(localStorage.getItem('userKey')!);\r\n  const userid = user.userId;\r\n\r\n\r\n  useEffect(() => {\r\n    let getFavList = async () => {\r\n\r\n      changeFavoriteList(await getfavList(userid))\r\n    }\r\n    getFavList()\r\n\r\n\r\n    setNewData(false)\r\n\r\n  }, [newData])\r\n\r\n\r\n  let chageState = () => {\r\n\r\n    console.log(\"clocked \")\r\n    setNewData(true)\r\n\r\n  }\r\n\r\n\r\n  console.log()\r\n\r\n\r\n  let displayPokemon = pokemons.map((fpokemon) => {\r\n    for (let i = 0; i < favotiteList.length; i++) {\r\n      if (fpokemon.id === favotiteList[i].favPokeId) {\r\n        let isfav = true\r\n        return (\r\n          <Grid key={fpokemon.id} xs={2} item>\r\n            <PokemonDisplay pokemon={fpokemon} favorite={favotiteList[i]} isfavorite={isfav} trigger={chageState} />\r\n\r\n          </Grid>\r\n        )\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div >\r\n      <Grid container spacing={2} >\r\n        {displayPokemon}\r\n      </Grid>\r\n      <Pagination\r\n        itemsCount={favotiteList.length}\r\n        pageSize={pageSize}\r\n        currentPage={currPage}\r\n        onPageChange={setCurrPage}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default FavoritesList;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TeamList, Teams } from \"../models/User\";\r\nimport {\r\n  addPokeToTeam,\r\n  deletePokeFromTeam,\r\n  deleteTeam,\r\n  getOnePokemon,\r\n  getTeamById,\r\n} from \"../services/pokemonServices\";\r\nimport {\r\n  Avatar,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { Pokemon } from \"../models/Pokemon\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { getUserById } from \"../services/userService\";\r\nimport { PokemonContext } from \"../App\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: 25,\r\n    minWidth: 275,\r\n  },\r\n  title: {\r\n    color: \"white\",\r\n    fontSize: 24,\r\n  },\r\n  custom: {\r\n    color: \"white\",\r\n  },\r\n});\r\nconst TeamCard: React.FunctionComponent<any> = (props) => {\r\n  const classes = useStyles();\r\n  const [currentTeamList, changeCurrentTeamList] = useState<TeamList[]>([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const pokeValue = useContext(PokemonContext);\r\n\r\n  useEffect(() => {\r\n    const getTeamList = async () => {\r\n      changeCurrentTeamList(await getTeamById(props.id));\r\n    };\r\n    getTeamList();\r\n    setRefresh(false);\r\n  }, [refresh]);\r\n\r\n  const deleteTeamDisplay = async (id: number) => {\r\n    try {\r\n      await deleteTeam(id);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deletePokeFromTeamList = async (id: number) => {\r\n    try {\r\n      await deletePokeFromTeam(id);\r\n      console.log(\"Delete succeed\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  let changeState = () => {\r\n    setRefresh(true);\r\n  };\r\n  let displayTeamList = pokeValue.map((pokemon: Pokemon) => {\r\n    for (let i = 0; i < currentTeamList.length; i++) {\r\n      if (pokemon.id === currentTeamList[i].teamPokeId) {\r\n        return (\r\n          <div key={pokemon.id}>\r\n            <Grid xs={4} item>\r\n              <List>\r\n                <div className=\"row\">\r\n                  <ListItem className={classes.custom} alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                      <Avatar alt={pokemon.name} src={pokemon.picture} />\r\n                    </ListItemAvatar>\r\n                    <ListItemText>{pokemon.name}</ListItemText>\r\n                    <ListItemSecondaryAction\r\n                      onClick={() => {\r\n                        setRefresh(true);\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        className=\"ml-auto\"\r\n                        edge=\"end\"\r\n                        style={{ color: \"white\" }}\r\n                        onClick={() => {\r\n                          deletePokeFromTeamList(currentTeamList[i].id);\r\n                        }}\r\n                      >\r\n                        <RemoveIcon />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                </div>\r\n              </List>\r\n            </Grid>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardContent style={{ backgroundColor: \"black\" }}>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            Pokemon Team<span> </span>\r\n            {props.name}\r\n          </Typography>\r\n          <div>{displayTeamList}</div>\r\n        </CardContent>\r\n        <CardActions onClick={props.triger} style={{ backgroundColor: \"grey\" }}>\r\n          <IconButton onClick={() => deleteTeamDisplay(props.id)}>\r\n            <DeleteIcon></DeleteIcon>\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\nexport default TeamCard;\r\n","import React, { SyntheticEvent, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  createTeam,\r\n  deleteTeam,\r\n  getTeamById,\r\n} from \"../services/pokemonServices\";\r\nimport { TeamList, Teams } from \"../models/User\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport TeamCard from \"./teamCard\";\r\nimport { getUserById } from \"../services/userService\";\r\nimport classes from \"*.module.css\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst Team: React.FunctionComponent<any> = (props) => {\r\n  const [currentTeam, changeCurrentTeam] = useState<Teams[]>([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [refresh, setRefresh] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleTeamNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTeamName(e.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  let user = JSON.parse(localStorage.getItem(\"userKey\")!);\r\n\r\n  const teamNames: Teams[] = [];\r\n  const submitTeam = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      var data = {\r\n        userId: user.userId,\r\n        teamName: teamName,\r\n      };\r\n      console.log(\"New team\", data);\r\n      createTeam(data);\r\n      setRefresh(true);\r\n    } catch (e) {\r\n      console.log(\"I am hrere\");\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getTeam = async () => {\r\n      let userR = await getUserById(user.userId);\r\n      const myArr = userR.userTeams;\r\n      for (let i = 0; i < myArr.length; i++) {\r\n        teamNames.push(myArr[i]);\r\n        //  let teamList=await getTeamById(myArr[i].teamid)\r\n      }\r\n      changeCurrentTeam([...teamNames]);\r\n    };\r\n    getTeam();\r\n    setRefresh(false);\r\n  }, [refresh]);\r\n\r\n  let changeState = () => {\r\n    setRefresh(true);\r\n  };\r\n  let displayTeam = currentTeam.map((fteam) => {\r\n    return (\r\n      <Grid xs={4} item>\r\n        <div key={fteam.teamid}></div>\r\n\r\n        <TeamCard\r\n          triger={changeState}\r\n          id={fteam.teamid}\r\n          name={fteam.teamName}\r\n        />\r\n      </Grid>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        {displayTeam}\r\n      </Grid>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Create New Team\r\n      </Button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Team</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Enter Team Name</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Team Name\"\r\n            type=\"text\"\r\n            value={teamName}\r\n            onChange={handleTeamNameChange}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"submit\" onClick={submitTeam} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\nexport default Team;\r\n","import { pokeApi } from \"../httpService\";\r\nimport { Pokemon } from \"../../models/Pokemon\";\r\nimport { generationUrl } from \"./generationService\";\r\nimport { typeUrl } from \"./typeService\";\r\n\r\nconst apiEndpoint = \"/pokemon\";\r\n\r\nfunction pokemonUrl(identifier: any) {\r\n  return `${apiEndpoint}/${identifier}`;\r\n}\r\n\r\nexport const getPokemons = async (\r\n  offset: number = 0,\r\n  limit: number = 2000\r\n): Promise<Pokemon[]> => {\r\n  try {\r\n    const options = {\r\n      params: {\r\n        offset,\r\n        limit,\r\n      },\r\n    };\r\n    let { data } = await pokeApi.get(apiEndpoint, options);\r\n\r\n    //batch api calls\r\n    let pokemons: Promise<Pokemon>[] = data.results.map((ele: any) => {\r\n      return getPokemon(ele.name);\r\n    });\r\n\r\n    //wait for all requests to finish\r\n    return await Promise.all(pokemons);\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const getPokemon = async (identifier: string): Promise<Pokemon> => {\r\n  try {\r\n    let { data } = await pokeApi.get(pokemonUrl(identifier));\r\n\r\n    let pokemon = new Pokemon();\r\n    pokemon.id = data.id;\r\n    pokemon.name = data.name;\r\n    pokemon.picture = data.sprites.front_default;\r\n    pokemon.weight = data.weight;\r\n    pokemon.type = [\r\n      data.types[0].type.name,\r\n      data.types[1] && data.types[1].type.name,\r\n    ];\r\n    return pokemon;\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const getPokemonByGeneration = async (\r\n  identifier: any\r\n): Promise<Pokemon[]> => {\r\n  try {\r\n    let res = await pokeApi.get(generationUrl(identifier));\r\n\r\n    let pokemons: Promise<Pokemon>[] = res.data.pokemon_species.map(\r\n      (ele: any) => {\r\n        return getPokemon(ele.name);\r\n      }\r\n    );\r\n\r\n    return await Promise.all(pokemons);\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const getPokemonByType = async (identifier: any): Promise<Pokemon[]> => {\r\n  try {\r\n    let res = await pokeApi.get(typeUrl(identifier));\r\n\r\n    let pokemons: Promise<Pokemon>[] = res.data.pokemon.map((ele: any) => {\r\n      return getPokemon(ele.pokemon.name);\r\n    });\r\n\r\n    return await Promise.all(pokemons);\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const getPokemonBySearch = async (input: string): Promise<Pokemon[]> => {\r\n  try {\r\n    let res = await pokeApi.get(\"/pokemon\");\r\n\r\n    let pokemons: Promise<Pokemon>[] = res.data.results.map((ele: any) => {\r\n      let tmp = ele.name.startsWith(input);\r\n\r\n      if (tmp) {\r\n        return getPokemon(ele.name);\r\n      }\r\n    });\r\n\r\n    return await Promise.all(pokemons);\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  Divider,\r\n  Grid,\r\n  makeStyles,\r\n  TextareaAutosize,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Pokemon, PokemonType } from \"../models/Pokemon\";\r\nimport { getOnePokemon } from \"../services/pokemonServices\";\r\nimport { PokemonDisplay } from \"./pokemonDisplay\";\r\n\r\nexport const Game: React.FunctionComponent<any> = () => {\r\n  const [pokedex, setPokeDex] = useState<Pokemon[]>([]);\r\n  const [rendomPokemon, setRendomPokemon] = useState<Pokemon>({\r\n    name: \"bulbasaur\",\r\n    id: 1,\r\n    weight: 20,\r\n    picture:\r\n      \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png\",\r\n    type: [PokemonType.Grass, PokemonType.Poison],\r\n  });\r\n  const [sendRequest, setSendRequest] = useState(true);\r\n\r\n  const pokeId = () => {\r\n    const min = Math.ceil(1);\r\n    const max = Math.floor(500);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  console.log(pokeId());\r\n\r\n  useEffect(() => {\r\n    console.log(\"i am calling \");\r\n\r\n    if (sendRequest) {\r\n      let getPoke = async () => {\r\n        setRendomPokemon(await getOnePokemon(pokeId()));\r\n      };\r\n      getPoke();\r\n    }\r\n\r\n    setSendRequest(false);\r\n  }, [sendRequest]);\r\n\r\n  console.log(rendomPokemon);\r\n\r\n  const removePokemaon = (id: number) => {\r\n    setPokeDex((prevState) => prevState.filter((p) => p.id != id));\r\n  };\r\n\r\n  let storePoke = (pokemon: Pokemon) => {\r\n    setPokeDex((prevState) => {\r\n      const pokeExist =\r\n        prevState.filter((poke) => pokemon.id == poke.id).length > 0;\r\n      if (!pokeExist) {\r\n        return [...prevState, pokemon];\r\n      } else {\r\n        return prevState;\r\n      }\r\n    });\r\n\r\n    setSendRequest(true);\r\n  };\r\n\r\n  let pokeDexDisplay = pokedex.map((pokemon) => {\r\n    return (\r\n      <>\r\n        <Grid item xs={3} alignContent=\"flex-start\" key={pokemon.id}>\r\n          <PokemonDisplay pokemon={pokemon} />\r\n        </Grid>\r\n      </>\r\n    );\r\n  });\r\n\r\n  let RendomDisplayPokemon = () => {\r\n    return (\r\n      <>\r\n       <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={1}\r\n        >\r\n            <Grid item xs={12}>\r\n          <PokemonDisplay pokemon={rendomPokemon}></PokemonDisplay>\r\n          </Grid>\r\n          <Grid item xs={12} >\r\n              \r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={() => storePoke(rendomPokemon)}\r\n            >\r\n              Catch\r\n            </Button>\r\n          \r\n          \r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setSendRequest(true)}\r\n            >\r\n              Skip\r\n            </Button>\r\n            </Grid>\r\n            </Grid>\r\n      </>\r\n    );\r\n  };\r\n  //<div style={{ float: \"right\" }}>\r\n//<div style={{ float: \"left\" }}>\r\n  //<div style={{ margin: \" 1% 0% 1% 36%\" }}> \r\n  //<div style={{ padding: \"auto\", margin: \"0% 45% 1% 36%\" }}>\r\n  return (\r\n    <>\r\n      \r\n        <RendomDisplayPokemon></RendomDisplayPokemon>\r\n      \r\n      \r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          spacing={1}\r\n        >\r\n          {pokeDexDisplay}\r\n        </Grid>\r\n      \r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport auth from \"../services/authService\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Logout: React.FunctionComponent<any> = () => {\r\n  auth.logout();\r\n  const history = useHistory();\r\n\r\n  history.push(\"/\");\r\n\r\n  return null;\r\n};\r\n\r\nexport default Logout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas, faPlus, faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { User } from \"./models/User\";\r\nimport Pokedex from \"./components/pokedex\";\r\nimport Navbar from \"./components/navbar\";\r\nimport { NotFound } from \"./components/notFound\";\r\nimport ProtectedRoute from \"./components/protectedRoute\";\r\nimport Login from \"./components/loginComponent/login\";\r\nimport Register from \"./components/registerComponent/register\";\r\nimport FavoritesList from \"./components/favoriteslist\";\r\nimport Team from \"./components/team\";\r\nimport TeamCard from \"./components/teamCard\";\r\nimport { Pokemon } from \"./models/Pokemon\";\r\nimport { getPokemons } from \"./services/pokeServices/pokemonService\";\r\nimport { Game } from \"./components/game\";\r\nimport Logout from \"./components/logout\";\r\n\r\nlibrary.add(fas, faPlus, faHeart);\r\nexport const PokemonContext = React.createContext<any>(undefined);\r\nexport const UserContext = React.createContext<any>(undefined);\r\nfunction App() {\r\n  const [user, changeUser] = useState<User>();\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n  useEffect(() => {\r\n    const initializeData = async () => {\r\n      let pokemons = await getPokemons();\r\n\r\n      setPokemons(pokemons);\r\n    };\r\n    initializeData();\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={user}>\r\n      <PokemonContext.Provider value={pokemons}>\r\n        <Router>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <ProtectedRoute\r\n              path=\"/fav\"\r\n              render={() => <FavoritesList pokemons={pokemons} />}\r\n            />\r\n            <ProtectedRoute path=\"/teams\" component={Team} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route\r\n              path=\"/pokemons\"\r\n              render={() => <Pokedex pokemons={pokemons} />}\r\n            />\r\n            <ProtectedRoute\r\n              path=\"/game\"\r\n              render={() => <Game pokemons={pokemons} />}\r\n            />\r\n            <Route path=\"/not-found\" component={NotFound} />\r\n            <Redirect exact from=\"/\" to=\"/pokemons\" />\r\n            <Redirect to=\"/not-found\" />\r\n          </Switch>\r\n        </Router>\r\n      </PokemonContext.Provider>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}